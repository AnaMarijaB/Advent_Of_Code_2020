Hello - from /home/opam/.vscode-server/extensions/jaredly.reason-vscode-1.7.13/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","languageId":"ocaml","version":1,"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let arr = Array.make n 0 in \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.314950942993ms
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.383138656616ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.22022628784ms
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":46}}}
[server] Got a method textDocument/hover
[server] processing took 0.325918197632ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":22,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.859975814819ms
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.617027282715ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.272989273071ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.411033630371ms
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":2},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    l\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.530004501343ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":3},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.283002853394ms
Sending response {"id": 10, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.216007232666ms
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":4},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    l\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.335931777954ms
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":5},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    le\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.319004058838ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.227928161621ms
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":8},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let r\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.28920173645ms
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":9},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let re\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":12},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec a\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.288963317871ms
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":13},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec au\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.265121459961ms
Sending response {"id": 17, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.305891036987ms
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.518798828125ms
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":15},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.344038009644ms
Sending response {"id": 20, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.258207321167ms
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":16},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux a\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.214099884033ms
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.205039978027ms
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":19},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux acc \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.305891036987ms
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.458955764771ms
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":20},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux acc =\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.524044036865ms
Sending response {"id": 26, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.257015228271ms
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":21},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux acc = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.914812088013ms
Sending response {"id": 28, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.309228897095ms
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":22},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux acc = i\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.52611732483ms
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":24},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux acc = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.334024429321ms
Sending response {"id": 31, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.443935394287ms
Sending response {"id": 32, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.28395652771ms
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":19}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.29182434082ms
Sending response {"id": 34, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.326156616211ms
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":25},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux ac = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":26},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux a = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":27},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux  = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.282049179077ms
Sending response {"id": 36, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.438928604126ms
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":31},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux pote = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.43797492981ms
Sending response {"id": 38, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":20},"end":{"line":7,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.221967697144ms
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.558853149414ms
Sending response {"id": 40, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":32},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux potez = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":37},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza pre = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":42},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.26798248291ms
Sending response {"id": 41, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":31},"end":{"line":7,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.19907951355ms
Sending response {"id": 42, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.268220901489ms
Sending response {"id": 43, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":43},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if  \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.398874282837ms
Sending response {"id": 44, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.378847122192ms
Sending response {"id": 45, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":44},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.295162200928ms
Sending response {"id": 46, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.367164611816ms
Sending response {"id": 47, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":45},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if p\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.306129455566ms
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":46},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if po\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":48},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if pote\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.399112701416ms
Sending response {"id": 49, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":41},"end":{"line":7,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.20694732666ms
Sending response {"id": 50, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":51},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.283002853394ms
Sending response {"id": 51, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.403881072998ms
Sending response {"id": 52, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":53},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.298976898193ms
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.423192977905ms
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":54},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.865936279297ms
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.355005264282ms
Sending response {"id": 56, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":47},"end":{"line":7,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.298976898193ms
Sending response {"id": 57, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.320911407471ms
Sending response {"id": 58, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":55},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.261068344116ms
Sending response {"id": 59, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.401020050049ms
Sending response {"id": 60, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":56},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.303030014038ms
Sending response {"id": 61, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":49},"end":{"line":7,"character":49}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.261068344116ms
Sending response {"id": 62, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":57},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.298023223877ms
Sending response {"id": 63, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":50},"end":{"line":7,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.281095504761ms
Sending response {"id": 64, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.221014022827ms
Sending response {"id": 65, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":58},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":59},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 t\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":52},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.247955322266ms
Sending response {"id": 66, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":63},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.281095504761ms
Sending response {"id": 67, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.367879867554ms
Sending response {"id": 68, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":64},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then p\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":57},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 2.36201286316ms
Sending response {"id": 69, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":67},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prej\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.19304656982ms
Sending response {"id": 70, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":60},"end":{"line":7,"character":60}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.247001647949ms
Sending response {"id": 71, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.41389465332ms
Sending response {"id": 72, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":68},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejs\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.284194946289ms
Sending response {"id": 73, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":61},"end":{"line":7,"character":61}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.270843505859ms
Sending response {"id": 74, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.361204147339ms
Sending response {"id": 75, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":69},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.282049179077ms
Sending response {"id": 76, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":64},"end":{"line":7,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.287055969238ms
Sending response {"id": 77, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.380992889404ms
Sending response {"id": 78, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":70},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.309944152832ms
Sending response {"id": 79, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.438928604126ms
Sending response {"id": 80, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":71},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji e\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":66},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.298023223877ms
Sending response {"id": 81, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":75},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.892877578735ms
Sending response {"id": 82, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.493049621582ms
Sending response {"id": 83, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":76},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n    \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.247001647949ms
Sending response {"id": 84, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.432968139648ms
Sending response {"id": 85, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":77},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.297069549561ms
Sending response {"id": 86, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.398874282837ms
Sending response {"id": 87, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":78},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      l\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.317096710205ms
Sending response {"id": 88, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":81},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.478982925415ms
Sending response {"id": 89, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.304937362671ms
Sending response {"id": 90, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":82},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let n\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.280857086182ms
Sending response {"id": 91, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":83},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let na\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.354051589966ms
Sending response {"id": 92, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.272035598755ms
Sending response {"id": 93, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.324964523315ms
Sending response {"id": 94, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":85},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let nasl\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.319957733154ms
Sending response {"id": 95, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":86},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let nasle\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.332832336426ms
Sending response {"id": 96, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":87},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let nasled\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.297069549561ms
Sending response {"id": 97, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":88},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let nasledn\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.257015228271ms
Sending response {"id": 98, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":89},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednj\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.416994094849ms
Sending response {"id": 99, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":90},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.311136245728ms
Sending response {"id": 100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":91},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.261068344116ms
Sending response {"id": 101, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.473976135254ms
Sending response {"id": 102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":93},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.2281665802ms
Sending response {"id": 103, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.355958938599ms
Sending response {"id": 104, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":94},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.92093849182ms
Sending response {"id": 105, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.392913818359ms
Sending response {"id": 106, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":95},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.881195068359ms
Sending response {"id": 107, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.387907028198ms
Sending response {"id": 108, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":96},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.539064407349ms
Sending response {"id": 109, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.57315826416ms
Sending response {"id": 110, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":97},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    l\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.366926193237ms
Sending response {"id": 111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":98},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    le\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":100},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.895023345947ms
Sending response {"id": 112, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.356912612915ms
Sending response {"id": 113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":101},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let s\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.239133834839ms
Sending response {"id": 114, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":103},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.911951065063ms
Sending response {"id": 115, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.592947006226ms
Sending response {"id": 116, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.945091247559ms
Sending response {"id": 117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":104},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":106},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.540018081665ms
Sending response {"id": 118, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.49901008606ms
Sending response {"id": 119, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 2.02488899231ms
Sending response {"id": 120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.920057296753ms
Sending response {"id": 121, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":107},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = s\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.293016433716ms
Sending response {"id": 122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":112},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.17778778076ms
Sending response {"id": 123, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":20},"end":{"line":7,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.432014465332ms
Sending response {"id": 124, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.365018844604ms
Sending response {"id": 125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":113},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.436067581177ms
Sending response {"id": 126, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":27},"end":{"line":7,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.494956970215ms
Sending response {"id": 127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.330924987793ms
Sending response {"id": 128, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":114},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":115},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":29},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.349044799805ms
Sending response {"id": 129, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.26807594299ms
Sending response {"id": 130, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":29},"end":{"line":7,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.530004501343ms
Sending response {"id": 131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":116},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.493049621582ms
Sending response {"id": 132, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.391006469727ms
Sending response {"id": 133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":117},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n n\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.211000442505ms
Sending response {"id": 134, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.92601776123ms
Sending response {"id": 135, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":31},"end":{"line":7,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.695943832397ms
Sending response {"id": 136, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.429153442383ms
Sending response {"id": 137, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":119},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n i\n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.283002853394ms
Sending response {"id": 138, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":121},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec aux poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.947952270508ms
Sending response {"id": 139, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.32894515991ms
Sending response {"id": 140, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.845909118652ms
Sending response {"id": 141, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.759124755859ms
Sending response {"id": 142, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":143,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.45602226257ms
Sending response {"id": 143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.52809715271ms
Sending response {"id": 144, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":122},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec k poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":145,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.285148620605ms
Sending response {"id": 145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":123},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec kr poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":146,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.272035598755ms
Sending response {"id": 146, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":124},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec kro poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":147,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.332832336426ms
Sending response {"id": 147, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":125},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":148,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.13606452942ms
Sending response {"id": 148, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":149,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.292062759399ms
Sending response {"id": 149, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":150,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.261068344116ms
Sending response {"id": 150, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":151,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.338077545166ms
Sending response {"id": 151, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":152,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":20}}}
[server] Got a method textDocument/hover
[server] processing took 0.563859939575ms
Sending response {"id": 152, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":45},"end":{"line":8,"character":45}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.32901763916ms
Sending response {"id": 153, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":154,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":45}}}
[server] Got a method textDocument/hover
[server] processing took 0.28920173645ms
Sending response {"id": 154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":126},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = m\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":155,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.245809555054ms
Sending response {"id": 155, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":127},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = ma\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":131},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":156,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.42598152161ms
Sending response {"id": 156, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":157,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.826120376587ms
Sending response {"id": 157, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":132},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match s\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":158,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":29},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.245809555054ms
Sending response {"id": 158, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":159,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.07789039612ms
Sending response {"id": 159, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":29},"end":{"line":9,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.334978103638ms
Sending response {"id": 160, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":135},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":161,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.91903114319ms
Sending response {"id": 161, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.319004058838ms
Sending response {"id": 162, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":136},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez w\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":163,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":33},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.236034393311ms
Sending response {"id": 163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":139},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":164,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.946998596191ms
Sending response {"id": 164, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":36},"end":{"line":9,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.349998474121ms
Sending response {"id": 165, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.69920921326ms
Sending response {"id": 166, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":140},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":167,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.66614151001ms
Sending response {"id": 167, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.298976898193ms
Sending response {"id": 168, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":141},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n      \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":169,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.576019287109ms
Sending response {"id": 169, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.49090385437ms
Sending response {"id": 170, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":142},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":171,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.978946685791ms
Sending response {"id": 171, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.799894332886ms
Sending response {"id": 172, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":143},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":173,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.570774078369ms
Sending response {"id": 173, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.464916229248ms
Sending response {"id": 174, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.682830810547ms
Sending response {"id": 175, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":145},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[]\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":146},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":176,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.03316116333ms
Sending response {"id": 176, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.743865966797ms
Sending response {"id": 177, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":147},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":148},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] ->\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":149},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":178,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.607013702393ms
Sending response {"id": 178, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.48487091064ms
Sending response {"id": 179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":71},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.59502029419ms
Sending response {"id": 180, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":71}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.74315071106ms
Sending response {"id": 181, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":150},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n\n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":151},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":182,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.75101852417ms
Sending response {"id": 182, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.61004066467ms
Sending response {"id": 183, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":184,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 1.0621547699ms
Sending response {"id": 184, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":185,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.370025634766ms
Sending response {"id": 185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.436067581177ms
Sending response {"id": 186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":152},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":187,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.350952148438ms
Sending response {"id": 187, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.331878662109ms
Sending response {"id": 188, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":189,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.569820404053ms
Sending response {"id": 189, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":153},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.623941421509ms
Sending response {"id": 190, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":191,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.338077545166ms
Sending response {"id": 191, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":154},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n\n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":155},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":71}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.262022018433ms
Sending response {"id": 192, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":193,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.229120254517ms
Sending response {"id": 193, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.64492225647ms
Sending response {"id": 194, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":195,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.491142272949ms
Sending response {"id": 195, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.348091125488ms
Sending response {"id": 196, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.536918640137ms
Sending response {"id": 197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":198,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 1.62601470947ms
Sending response {"id": 198, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":33},"end":{"line":8,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.818967819214ms
Sending response {"id": 199, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":200,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 1.39307975769ms
Sending response {"id": 200, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 1.5230178833ms
Sending response {"id": 201, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":156},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji P= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":202,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":34},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.679969787598ms
Sending response {"id": 202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":157},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji PR= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":160},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji PRAZE= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":203,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.300884246826ms
Sending response {"id": 203, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":161},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji PRAZEN= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":204,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":39},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.273942947388ms
Sending response {"id": 204, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":162},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji PRAZEN = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":205,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.20401382446ms
Sending response {"id": 205, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.723838806152ms
Sending response {"id": 206, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":207,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.863075256348ms
Sending response {"id": 207, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":167},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji PR= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":168},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji P= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":169},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":208,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.72901153564ms
Sending response {"id": 208, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":209,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":33},"end":{"line":8,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.839948654175ms
Sending response {"id": 209, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":175},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji prazen= if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":210,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.903129577637ms
Sending response {"id": 210, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":39},"end":{"line":8,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.738143920898ms
Sending response {"id": 211, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":212,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.720977783203ms
Sending response {"id": 212, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":176},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji prazen = if poteza = n +1 then prejsnji else \n      let naslednji = match sez with\n        |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":213,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.09910964966ms
Sending response {"id": 213, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.283002853394ms
Sending response {"id": 214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":215,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.265121459961ms
Sending response {"id": 215, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":216,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 1.51896476746ms
Sending response {"id": 216, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":217,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.740051269531ms
Sending response {"id": 217, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.560998916626ms
Sending response {"id": 218, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 1.305103302ms
Sending response {"id": 219, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":220,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":32}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.596046447754ms
Sending response {"id": 220, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.55997276306ms
Sending response {"id": 221, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":222,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 2.6319026947ms
Sending response {"id": 222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":223,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 1.44600868225ms
Sending response {"id": 223, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":224,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":42}}}
[server] Got a method textDocument/hover
[server] processing took 1.35803222656ms
Sending response {"id": 224, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":225,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.28102302551ms
Sending response {"id": 225, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":42},"end":{"line":10,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.410079956055ms
Sending response {"id": 226, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":177},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji prazen = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":178},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog poteza prejsnji prazen =\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":227,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.256061553955ms
Sending response {"id": 227, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":41},"end":{"line":8,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.305891036987ms
Sending response {"id": 228, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":229,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.750064849854ms
Sending response {"id": 229, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":202},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":230,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04212760925ms
Sending response {"id": 230, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.412940979004ms
Sending response {"id": 231, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":211},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog seznam pr\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":212},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog seznam pra\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":232,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.915050506592ms
Sending response {"id": 232, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":233,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":27},"end":{"line":8,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.799894332886ms
Sending response {"id": 233, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":234,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.675916671753ms
Sending response {"id": 234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":216},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog seznam prazen \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":235,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.35311889648ms
Sending response {"id": 235, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":236,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.16300582886ms
Sending response {"id": 236, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":218},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog seznam prazen = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":237,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.00009346008ms
Sending response {"id": 237, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.380992889404ms
Sending response {"id": 238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":219},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog seznam prazen =\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":239,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.846147537231ms
Sending response {"id": 239, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":32},"end":{"line":8,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.949144363403ms
Sending response {"id": 240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":241,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.447034835815ms
Sending response {"id": 241, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":230},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog sezn\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":234},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":242,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.730037689209ms
Sending response {"id": 242, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.02989578247ms
Sending response {"id": 243, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":236},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog pr\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":241},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":244,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.2948513031ms
Sending response {"id": 244, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":245,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.592947006226ms
Sending response {"id": 245, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":242},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen =\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":243},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":246,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.349998474121ms
Sending response {"id": 246, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":247,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.804901123047ms
Sending response {"id": 247, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":244},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = f\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":248,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.303983688354ms
Sending response {"id": 248, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":247},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = func\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":249},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = functi\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":249,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":32},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.237941741943ms
Sending response {"id": 249, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":250},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = functio\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":250,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":33},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.398874282837ms
Sending response {"id": 250, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":251},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":251,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":34},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.465869903564ms
Sending response {"id": 251, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":252,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.20386886597ms
Sending response {"id": 252, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":34},"end":{"line":8,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.335931777954ms
Sending response {"id": 253, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":252},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n    \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":254,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.951051712036ms
Sending response {"id": 254, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":255,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.702857971191ms
Sending response {"id": 255, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":253},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":256,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.524044036865ms
Sending response {"id": 256, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.957012176514ms
Sending response {"id": 257, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":254},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":258,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.314950942993ms
Sending response {"id": 258, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.349998474121ms
Sending response {"id": 259, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":260,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.960111618042ms
Sending response {"id": 260, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":257},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":258},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":260},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":261,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.10101699829ms
Sending response {"id": 261, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":262,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.05285644531ms
Sending response {"id": 262, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":261},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> p\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":263,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.399112701416ms
Sending response {"id": 263, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":267},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":264,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.92301177979ms
Sending response {"id": 264, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":265,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.367164611816ms
Sending response {"id": 265, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":268},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":266,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.47914886475ms
Sending response {"id": 266, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":267,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.632047653198ms
Sending response {"id": 267, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":269},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":268,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.48105621338ms
Sending response {"id": 268, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":269,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.439167022705ms
Sending response {"id": 269, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":270,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.277996063232ms
Sending response {"id": 270, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":270},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |()\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":271,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":8}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.652074813843ms
Sending response {"id": 271, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":271},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |()\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":272,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":9}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.529050827026ms
Sending response {"id": 272, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":273,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.31511688232ms
Sending response {"id": 273, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.84114074707ms
Sending response {"id": 274, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":275,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.37407875061ms
Sending response {"id": 275, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":276,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.92809104919ms
Sending response {"id": 276, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":275},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":277,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.406980514526ms
Sending response {"id": 277, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.332117080688ms
Sending response {"id": 278, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":279,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.355005264282ms
Sending response {"id": 279, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":280,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.75809860229ms
Sending response {"id": 280, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":277},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)::\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":281,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.35588645935ms
Sending response {"id": 281, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.16014480591ms
Sending response {"id": 282, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":283,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.36096572876ms
Sending response {"id": 283, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":278},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)::x\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":280},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)::xs \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":284,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.76699256897ms
Sending response {"id": 284, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":285,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.531911849976ms
Sending response {"id": 285, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":281},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)::xs -\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":283},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n    let sez = seznam_dvojic n in \n    let rec krog prazen = function\n      |[] -> prazen \n      |(x, y)::xs -> \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":286,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.586986541748ms
Sending response {"id": 286, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":287,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.45108795166ms
Sending response {"id": 287, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":288,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.52277946472ms
Sending response {"id": 288, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":1},"end":{"line":10,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 4.9831867218ms
Sending response {"id": 289, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":284},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n \n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":290,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.363111495972ms
Sending response {"id": 290, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":291,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.411033630371ms
Sending response {"id": 291, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":306},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nl\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":292,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.200986862183ms
Sending response {"id": 292, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":293,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.216007232666ms
Sending response {"id": 293, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":294,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.54407119751ms
Sending response {"id": 294, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":307},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n\n    \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":295,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04808807373ms
Sending response {"id": 295, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":296,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.14798545837ms
Sending response {"id": 296, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":309},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n\n  \nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":297,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.800132751465ms
Sending response {"id": 297, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":310},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":311},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":298,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.946998596191ms
Sending response {"id": 298, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.520944595337ms
Sending response {"id": 299, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":312},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nl\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":300,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.295877456665ms
Sending response {"id": 300, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":314},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":301,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.450134277344ms
Sending response {"id": 301, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.30517578125ms
Sending response {"id": 302, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":303,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.31304359436ms
Sending response {"id": 303, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":315},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":316},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":317},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":304,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.699996948242ms
Sending response {"id": 304, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.933885574341ms
Sending response {"id": 305, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":306,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.237941741943ms
Sending response {"id": 306, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":307,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.545024871826ms
Sending response {"id": 307, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":319},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":308,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.286102294922ms
Sending response {"id": 308, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":309,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.616073608398ms
Sending response {"id": 309, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":310,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":5},"end":{"line":6,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.422954559326ms
Sending response {"id": 310, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":311,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.396966934204ms
Sending response {"id": 311, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":320},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":321},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_t\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":312,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 2.20203399658ms
Sending response {"id": 312, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":322},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":313,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":8},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.292062759399ms
Sending response {"id": 313, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":314,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.946044921875ms
Sending response {"id": 314, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":315,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.571966171265ms
Sending response {"id": 315, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":323},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":316,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.262975692749ms
Sending response {"id": 316, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":317,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.00111961365ms
Sending response {"id": 317, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.972986221313ms
Sending response {"id": 318, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":319,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.555038452148ms
Sending response {"id": 319, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":324},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_e\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":320,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.262022018433ms
Sending response {"id": 320, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":321,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.59502029419ms
Sending response {"id": 321, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":322,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.701189041138ms
Sending response {"id": 322, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":322}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":325},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_el\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":323,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.272989273071ms
Sending response {"id": 323, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":327},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_elem\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":324,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.704050064087ms
Sending response {"id": 324, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":329},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_elemen\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":325,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.671148300171ms
Sending response {"id": 325, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":331},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":326,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.14011764526ms
Sending response {"id": 326, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":327,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.898838043213ms
Sending response {"id": 327, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":333},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":335},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":328,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.283002853394ms
Sending response {"id": 328, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":329,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.34181976318ms
Sending response {"id": 329, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":336},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":330,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.241994857788ms
Sending response {"id": 330, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":337},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":331,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.15919113159ms
Sending response {"id": 331, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":332,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.285148620605ms
Sending response {"id": 332, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":338},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  l\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":333,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.28395652771ms
Sending response {"id": 333, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":339},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  le\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":334,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.848054885864ms
Sending response {"id": 334, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":335,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.287055969238ms
Sending response {"id": 335, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":340},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  le \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":336,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.807046890259ms
Sending response {"id": 336, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":337,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.440120697021ms
Sending response {"id": 337, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":342},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":338,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.41389465332ms
Sending response {"id": 338, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":343},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":339,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.84400177002ms
Sending response {"id": 339, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":340,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.70588493347ms
Sending response {"id": 340, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":344},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let i\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":341,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.28395652771ms
Sending response {"id": 341, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":345},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let in\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":349},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let input \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":342,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.319004058838ms
Sending response {"id": 342, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":343,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.412940979004ms
Sending response {"id": 343, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":350},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let input\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":344,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.240802764893ms
Sending response {"id": 344, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":345,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.26798248291ms
Sending response {"id": 345, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":346,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.294923782349ms
Sending response {"id": 346, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":355},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":347,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.319004058838ms
Sending response {"id": 347, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":348,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.468015670776ms
Sending response {"id": 348, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":356},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let p\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":349,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.248908996582ms
Sending response {"id": 349, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":360},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let praze\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":350,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.761985778809ms
Sending response {"id": 350, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":361},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":351,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.581979751587ms
Sending response {"id": 351, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":364},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen ? \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":352,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.01900100708ms
Sending response {"id": 352, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":353,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.903844833374ms
Sending response {"id": 353, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":366},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":354,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.34692001343ms
Sending response {"id": 354, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":355,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.678777694702ms
Sending response {"id": 355, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":369},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = A\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":356,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.338077545166ms
Sending response {"id": 356, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":357,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.747919082642ms
Sending response {"id": 357, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":358,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.916004180908ms
Sending response {"id": 358, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":359,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.519037246704ms
Sending response {"id": 359, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":372},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":360,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.460147857666ms
Sending response {"id": 360, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":361,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":20},"end":{"line":7,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.396013259888ms
Sending response {"id": 361, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.282049179077ms
Sending response {"id": 362, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":373},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":363,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":21},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 1.33991241455ms
Sending response {"id": 363, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":364,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.66614151001ms
Sending response {"id": 364, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.546932220459ms
Sending response {"id": 365, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":366,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.42986869812ms
Sending response {"id": 366, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":374},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.m\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":367,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.323057174683ms
Sending response {"id": 367, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":378},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":368,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.285148620605ms
Sending response {"id": 368, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":369,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.573873519897ms
Sending response {"id": 369, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":379},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":370,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.248908996582ms
Sending response {"id": 370, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":380},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":371,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.810861587524ms
Sending response {"id": 371, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":372,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.492095947266ms
Sending response {"id": 372, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":381},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":373,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.302076339722ms
Sending response {"id": 373, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":29},"end":{"line":7,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.440120697021ms
Sending response {"id": 374, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":375,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.67400932312ms
Sending response {"id": 375, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":382},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":383},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 i\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":376,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.348091125488ms
Sending response {"id": 376, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":386},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":377,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.1260509491ms
Sending response {"id": 377, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":378,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.849008560181ms
Sending response {"id": 378, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":379,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.05714797974ms
Sending response {"id": 379, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":387},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  l\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":380,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.345945358276ms
Sending response {"id": 380, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":388},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  le\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":392},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let re\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":381,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":8},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.309944152832ms
Sending response {"id": 381, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":394},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":395},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec k\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":382,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.349998474121ms
Sending response {"id": 382, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":396},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec kr\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":383,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.292062759399ms
Sending response {"id": 383, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":397},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec kro\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":384,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.280141830444ms
Sending response {"id": 384, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":398},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":385,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.414133071899ms
Sending response {"id": 385, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":399},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":401},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog po\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":386,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0199546814ms
Sending response {"id": 386, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.495910644531ms
Sending response {"id": 387, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":388,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.349044799805ms
Sending response {"id": 388, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":405},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":389,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.465869903564ms
Sending response {"id": 389, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":390,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":21},"end":{"line":8,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.519037246704ms
Sending response {"id": 390, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":391,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.303030014038ms
Sending response {"id": 391, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":412},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsn\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":413},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":392,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.86800956726ms
Sending response {"id": 392, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":393,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.86498260498ms
Sending response {"id": 393, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":394,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.487089157104ms
Sending response {"id": 394, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":414},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":395,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.609874725342ms
Sending response {"id": 395, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":396,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.556945800781ms
Sending response {"id": 396, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":416},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":397,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.268936157227ms
Sending response {"id": 397, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":398,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.468015670776ms
Sending response {"id": 398, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":417},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = i\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":399,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":33},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.339031219482ms
Sending response {"id": 399, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":419},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":400,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.37996673584ms
Sending response {"id": 400, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":420},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if p\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":401,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":36},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.298023223877ms
Sending response {"id": 401, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":421},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if po\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":402,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.296115875244ms
Sending response {"id": 402, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":37},"end":{"line":8,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.280141830444ms
Sending response {"id": 403, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":404,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.671863555908ms
Sending response {"id": 404, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":423},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if pote\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":426},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":405,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.53422355652ms
Sending response {"id": 405, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":406,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.715017318726ms
Sending response {"id": 406, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":428},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":407,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.458002090454ms
Sending response {"id": 407, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":408,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.65200233459ms
Sending response {"id": 408, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":429},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":409,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":45},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.247955322266ms
Sending response {"id": 409, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":430},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":410,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.259160995483ms
Sending response {"id": 410, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":411,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.48303604126ms
Sending response {"id": 411, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":431},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n +\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":434},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":412,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.2218952179ms
Sending response {"id": 412, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":413,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.0740032196ms
Sending response {"id": 413, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":435},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 t\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":414,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":51},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.187873840332ms
Sending response {"id": 414, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":438},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 tne \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":415,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.910997390747ms
Sending response {"id": 415, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":416,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.792026519775ms
Sending response {"id": 416, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":441},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 t\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":417,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.00898742676ms
Sending response {"id": 417, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":418,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":51},"end":{"line":8,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.838994979858ms
Sending response {"id": 418, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":442},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 th\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":419,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":52},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.369071960449ms
Sending response {"id": 419, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":445},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":420,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.24296951294ms
Sending response {"id": 420, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":421,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.85711479187ms
Sending response {"id": 421, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":446},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then p\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":422,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":56},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.350952148438ms
Sending response {"id": 422, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":450},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejs\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":423,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.08695030212ms
Sending response {"id": 423, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":424,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":60},"end":{"line":8,"character":60}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.427007675171ms
Sending response {"id": 424, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":425,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.420093536377ms
Sending response {"id": 425, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":451},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsn\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":426,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.43511390686ms
Sending response {"id": 426, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":427,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":61},"end":{"line":8,"character":61}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.258922576904ms
Sending response {"id": 427, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":427}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":452},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":428,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.475883483887ms
Sending response {"id": 428, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":429,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":62},"end":{"line":8,"character":62}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.366926193237ms
Sending response {"id": 429, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":430,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.484943389893ms
Sending response {"id": 430, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":454},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni e\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":431,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":64},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.292062759399ms
Sending response {"id": 431, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":459},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n  \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":432,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.391960144043ms
Sending response {"id": 432, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":433,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.59597396851ms
Sending response {"id": 433, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":460},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":461},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    m\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":434,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.298023223877ms
Sending response {"id": 434, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":462},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    ma\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":463},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    mat\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":435,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.617027282715ms
Sending response {"id": 435, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":436,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.494003295898ms
Sending response {"id": 436, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":466},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    match \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":437,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.26600265503ms
Sending response {"id": 437, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":438,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.75101852417ms
Sending response {"id": 438, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":467},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    match\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":471},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    m\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":439,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.413179397583ms
Sending response {"id": 439, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":440,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.369787216187ms
Sending response {"id": 440, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":472},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":441,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.710010528564ms
Sending response {"id": 441, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":442,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.622987747192ms
Sending response {"id": 442, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":473},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    l\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":443,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.262975692749ms
Sending response {"id": 443, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":477},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":444,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.277996063232ms
Sending response {"id": 444, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":478},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let na\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":445,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.370025634766ms
Sending response {"id": 445, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":446,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":10},"end":{"line":9,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.298976898193ms
Sending response {"id": 446, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":447,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.58388710022ms
Sending response {"id": 447, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":479},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let nas\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":448,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.15394592285ms
Sending response {"id": 448, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":449,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.345945358276ms
Sending response {"id": 449, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":450,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.401973724365ms
Sending response {"id": 450, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":480},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let nasl\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":451,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.321865081787ms
Sending response {"id": 451, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":452,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.52294540405ms
Sending response {"id": 452, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":453,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.478029251099ms
Sending response {"id": 453, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":454,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.383138656616ms
Sending response {"id": 454, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":483},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":455,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.581979751587ms
Sending response {"id": 455, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":456,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.46810913086ms
Sending response {"id": 456, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":484},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":457,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.243902206421ms
Sending response {"id": 457, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":458,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.807046890259ms
Sending response {"id": 458, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":485},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let n\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":459,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.233888626099ms
Sending response {"id": 459, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":488},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let nasl\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":460,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.5389919281ms
Sending response {"id": 460, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":489},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let nasle\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":461,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.329971313477ms
Sending response {"id": 461, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":490},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let nasled\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":462,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.31304359436ms
Sending response {"id": 462, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":492},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednj\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":463,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.298976898193ms
Sending response {"id": 463, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":493},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":464,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.249862670898ms
Sending response {"id": 464, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":494},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":465,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.406980514526ms
Sending response {"id": 465, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":466,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.29389762878ms
Sending response {"id": 466, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":495},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji =\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":467,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.8788318634ms
Sending response {"id": 467, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":468,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.40602684021ms
Sending response {"id": 468, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":469,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.367164611816ms
Sending response {"id": 469, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":496},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":470,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.925064086914ms
Sending response {"id": 470, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":471,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.417947769165ms
Sending response {"id": 471, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":497},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = m\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":472,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":21},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.282049179077ms
Sending response {"id": 472, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":498},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = ma\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":499},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = mas\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":473,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.005027771ms
Sending response {"id": 473, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":474,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":23},"end":{"line":9,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.46706199646ms
Sending response {"id": 474, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":475,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.319957733154ms
Sending response {"id": 475, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":500},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = ma\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":476,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.808000564575ms
Sending response {"id": 476, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.540971755981ms
Sending response {"id": 477, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":478,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.365972518921ms
Sending response {"id": 478, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":501},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = mat\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":479,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.90217590332ms
Sending response {"id": 479, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":480,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":23},"end":{"line":9,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.59986114502ms
Sending response {"id": 480, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":481,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.381946563721ms
Sending response {"id": 481, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":505},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match s\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":482,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.247001647949ms
Sending response {"id": 482, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":507},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match spo\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":483,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.38404083252ms
Sending response {"id": 483, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":484,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":29},"end":{"line":9,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.446081161499ms
Sending response {"id": 484, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":485,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.339984893799ms
Sending response {"id": 485, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":510},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match \n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":486,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.764131546021ms
Sending response {"id": 486, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":487,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.712156295776ms
Sending response {"id": 487, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":511},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match p\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":488,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.298976898193ms
Sending response {"id": 488, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":516},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":517},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":489,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":33},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.304937362671ms
Sending response {"id": 489, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":490,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.465869903564ms
Sending response {"id": 490, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":491,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":33},"end":{"line":9,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.369071960449ms
Sending response {"id": 491, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":492,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.471830368042ms
Sending response {"id": 492, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":518},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.()\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":493,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":34}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.586986541748ms
Sending response {"id": 493, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":494,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.78384780884ms
Sending response {"id": 494, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":495,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.458955764771ms
Sending response {"id": 495, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":496,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.412940979004ms
Sending response {"id": 496, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":519},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(p)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":497,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":35},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.277996063232ms
Sending response {"id": 497, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":520},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(po)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":524},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(poteza)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":498,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.49393081665ms
Sending response {"id": 498, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":499,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":40},"end":{"line":9,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.581026077271ms
Sending response {"id": 499, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":500,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.349998474121ms
Sending response {"id": 500, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":529},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(p)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":530},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.()\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":501,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.377178192139ms
Sending response {"id": 501, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":502,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.387907028198ms
Sending response {"id": 502, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":503,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.941038131714ms
Sending response {"id": 503, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":531},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(p)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":504,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":35},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.456809997559ms
Sending response {"id": 504, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":533},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(pre)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":534},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prej)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":505,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.548124313354ms
Sending response {"id": 505, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":506,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":38},"end":{"line":9,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.414848327637ms
Sending response {"id": 506, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":507,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.770092010498ms
Sending response {"id": 507, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":535},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":508,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.312089920044ms
Sending response {"id": 508, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":509,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":41},"end":{"line":9,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.292062759399ms
Sending response {"id": 509, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":510,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.5721321106ms
Sending response {"id": 510, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":536},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":511,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.62482261658ms
Sending response {"id": 511, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":512,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.584125518799ms
Sending response {"id": 512, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":513,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":42},"end":{"line":9,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.49614906311ms
Sending response {"id": 513, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":537},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":514,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.41303443909ms
Sending response {"id": 514, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":515,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.871181488037ms
Sending response {"id": 515, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":538},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) w\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":516,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":44},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.575065612793ms
Sending response {"id": 516, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":541},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":517,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.886917114258ms
Sending response {"id": 517, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":518,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":47},"end":{"line":9,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.504970550537ms
Sending response {"id": 518, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":542},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":519,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.28395652771ms
Sending response {"id": 519, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":543},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n    \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":520,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.373125076294ms
Sending response {"id": 520, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":521,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.80602073669ms
Sending response {"id": 521, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":544},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":522,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.418901443481ms
Sending response {"id": 522, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":523,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.463962554932ms
Sending response {"id": 523, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":545},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":524,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.385999679565ms
Sending response {"id": 524, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":525,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.31304359436ms
Sending response {"id": 525, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":526,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.257968902588ms
Sending response {"id": 526, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":527,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":15,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.793933868408ms
Sending response {"id": 527, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":528,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":0},"end":{"line":15,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.47318840027ms
Sending response {"id": 528, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":529,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 4.56500053406ms
Sending response {"id": 529, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":530,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":0}}}
[server] Got a method textDocument/definition
[server] processing took 2.53105163574ms
Sending response {"id": 530, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":546},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(* let n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input *)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":531,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.473976135254ms
Sending response {"id": 531, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":532,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":15,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.217199325562ms
Sending response {"id": 532, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":533,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.375032424927ms
Sending response {"id": 533, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":534,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.02107429504ms
Sending response {"id": 534, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":535,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.80006027222ms
Sending response {"id": 535, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":546},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(* let n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input *)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":546}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":536,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.08790397644ms
Sending response {"id": 536, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":537,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 1.08289718628ms
Sending response {"id": 537, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":538,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.341176986694ms
Sending response {"id": 538, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":539,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":23},"end":{"line":14,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.637054443359ms
Sending response {"id": 539, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":540,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":15,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 3.79395484924ms
Sending response {"id": 540, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":541,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":0},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.514984130859ms
Sending response {"id": 541, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":542,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.409841537476ms
Sending response {"id": 542, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":547},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":543,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.59907341003ms
Sending response {"id": 543, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":544,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":0},"end":{"line":15,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.414133071899ms
Sending response {"id": 544, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":545,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.411033630371ms
Sending response {"id": 545, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":546,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 1.23691558838ms
Sending response {"id": 546, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":547,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":31},"end":{"line":9,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.470161437988ms
Sending response {"id": 547, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":548,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.76699256897ms
Sending response {"id": 548, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":549,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.340938568115ms
Sending response {"id": 549, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":550,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 1.20902061462ms
Sending response {"id": 550, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":551,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.285148620605ms
Sending response {"id": 551, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":552,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.530958175659ms
Sending response {"id": 552, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":548},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":553,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.32601165771ms
Sending response {"id": 553, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":554,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.397920608521ms
Sending response {"id": 554, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":549},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":550},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":555,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.38211250305ms
Sending response {"id": 555, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":556,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.685214996338ms
Sending response {"id": 556, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":557,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.472068786621ms
Sending response {"id": 557, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":551},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -<\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":558,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.15394592285ms
Sending response {"id": 558, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":559,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.399827957153ms
Sending response {"id": 559, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":560,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.283002853394ms
Sending response {"id": 560, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":556},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":561,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.13606452942ms
Sending response {"id": 561, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":562,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.463008880615ms
Sending response {"id": 562, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":557},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":563,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.14893913269ms
Sending response {"id": 563, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":564,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.871896743774ms
Sending response {"id": 564, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":558},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":565,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.04014778137ms
Sending response {"id": 565, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":566,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04689598083ms
Sending response {"id": 566, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":567,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.15299224854ms
Sending response {"id": 567, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":559},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |j\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":560},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |j \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":568,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.18908691406ms
Sending response {"id": 568, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":569,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.582933425903ms
Sending response {"id": 569, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":561},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |j\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":562},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":570,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.658988952637ms
Sending response {"id": 570, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":571,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.409841537476ms
Sending response {"id": 571, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":572,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.46706199646ms
Sending response {"id": 572, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":564},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":573,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.78909301758ms
Sending response {"id": 573, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":574,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.92904472351ms
Sending response {"id": 574, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":565},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":567},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":575,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.48303604126ms
Sending response {"id": 575, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":576,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.15084648132ms
Sending response {"id": 576, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":568},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> p\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":577,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.3981590271ms
Sending response {"id": 577, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":569},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> po\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":578,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.99804115295ms
Sending response {"id": 578, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":579,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.391006469727ms
Sending response {"id": 579, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":573},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":580,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.51801109314ms
Sending response {"id": 580, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":581,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.72979927063ms
Sending response {"id": 581, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":582,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.25288963318ms
Sending response {"id": 582, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":574},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":583,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 5.07998466492ms
Sending response {"id": 583, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":584,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.555992126465ms
Sending response {"id": 584, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":577},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":585,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.226974487305ms
Sending response {"id": 585, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":578},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":586,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.489950180054ms
Sending response {"id": 586, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":587,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.55107879639ms
Sending response {"id": 587, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":581},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":588,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.550985336304ms
Sending response {"id": 588, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":589,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.94621086121ms
Sending response {"id": 589, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":582},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n      \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":590,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.80604171753ms
Sending response {"id": 590, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":591,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.42192840576ms
Sending response {"id": 591, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":583},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":592,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.00288200378ms
Sending response {"id": 592, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":593,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.539064407349ms
Sending response {"id": 593, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":584},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    i\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":594,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":12,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.270843505859ms
Sending response {"id": 594, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":585},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":595,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.25885009766ms
Sending response {"id": 595, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":596,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.356912612915ms
Sending response {"id": 596, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":586},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":597,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.378847122192ms
Sending response {"id": 597, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":598,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.257968902588ms
Sending response {"id": 598, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":587},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":599,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.08704376221ms
Sending response {"id": 599, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":600,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.46007537842ms
Sending response {"id": 600, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":588},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    p\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":601,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.28395652771ms
Sending response {"id": 601, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":589},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    pr\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":593},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":602,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.346183776855ms
Sending response {"id": 602, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":603,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.236034393311ms
Sending response {"id": 603, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":604,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.37417221069ms
Sending response {"id": 604, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":594},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":605,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":11},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.315189361572ms
Sending response {"id": 605, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":595},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.p\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":606,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.314950942993ms
Sending response {"id": 606, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":598},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.prej\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":607,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.30486488342ms
Sending response {"id": 607, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":608,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.416040420532ms
Sending response {"id": 608, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":609,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.584840774536ms
Sending response {"id": 609, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":599},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.prejsni\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":610,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.964879989624ms
Sending response {"id": 610, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":611,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.334024429321ms
Sending response {"id": 611, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":612,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.63197517395ms
Sending response {"id": 612, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":613,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.376224517822ms
Sending response {"id": 613, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":614,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.802040100098ms
Sending response {"id": 614, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":615,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":11},"end":{"line":13,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.270843505859ms
Sending response {"id": 615, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":600},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":616,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":12}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.438213348389ms
Sending response {"id": 616, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":617,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.441074371338ms
Sending response {"id": 617, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":618,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.322103500366ms
Sending response {"id": 618, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":619,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.713109970093ms
Sending response {"id": 619, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":620,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":19}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.466823577881ms
Sending response {"id": 620, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":621,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.468969345093ms
Sending response {"id": 621, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":601},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":622,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.550985336304ms
Sending response {"id": 622, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":623,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.287055969238ms
Sending response {"id": 623, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":624,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.63888931274ms
Sending response {"id": 624, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":602},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":625,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.481843948364ms
Sending response {"id": 625, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":626,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.396966934204ms
Sending response {"id": 626, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":603},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":627,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.960111618042ms
Sending response {"id": 627, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":628,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":22},"end":{"line":13,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.983953475952ms
Sending response {"id": 628, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":604},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <-\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":629,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.11603736877ms
Sending response {"id": 629, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":630,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":23},"end":{"line":13,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.768184661865ms
Sending response {"id": 630, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":631,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.04904174805ms
Sending response {"id": 631, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":605},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":632,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.94010543823ms
Sending response {"id": 632, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":633,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.28793716431ms
Sending response {"id": 633, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":606},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- p\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":634,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":25},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.328063964844ms
Sending response {"id": 634, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":607},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- po\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":609},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- pote\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":611},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":635,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.61297416687ms
Sending response {"id": 635, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":636,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.593185424805ms
Sending response {"id": 636, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":637,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.92601776123ms
Sending response {"id": 637, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":612},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":613},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":614},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":615},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1 \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":638,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.62894821167ms
Sending response {"id": 638, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":639,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.463962554932ms
Sending response {"id": 639, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":616},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":640,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.338077545166ms
Sending response {"id": 640, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":641,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":33},"end":{"line":13,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.310897827148ms
Sending response {"id": 641, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":617},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":642,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.941038131714ms
Sending response {"id": 642, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":643,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":13,"character":34},"end":{"line":13,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.476837158203ms
Sending response {"id": 643, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":618},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":644,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.09698486328ms
Sending response {"id": 644, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":645,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.524044036865ms
Sending response {"id": 645, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":619},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    k\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":646,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.303030014038ms
Sending response {"id": 646, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":622},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":647,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.580072402954ms
Sending response {"id": 647, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":648,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.347137451172ms
Sending response {"id": 648, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":649,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.827074050903ms
Sending response {"id": 649, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":623},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":650,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.32114982605ms
Sending response {"id": 650, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":651,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.75087356567ms
Sending response {"id": 651, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":624},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog ()\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":652,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":10}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 3.23104858398ms
Sending response {"id": 652, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":653,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.538110733032ms
Sending response {"id": 653, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":654,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.366926193237ms
Sending response {"id": 654, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":655,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.300884246826ms
Sending response {"id": 655, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":625},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (p)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":656,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.282049179077ms
Sending response {"id": 656, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":628},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (pote)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":630},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteua)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":657,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.627040863037ms
Sending response {"id": 657, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":658,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.478982925415ms
Sending response {"id": 658, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":659,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.223875045776ms
Sending response {"id": 659, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":660,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.30891799927ms
Sending response {"id": 660, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":632},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (pote)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":661,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.27983093262ms
Sending response {"id": 661, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":662,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.757932662964ms
Sending response {"id": 662, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":663,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.338792800903ms
Sending response {"id": 663, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":633},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (potez)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":664,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.31304359436ms
Sending response {"id": 664, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":635},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza )\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":665,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.821828842163ms
Sending response {"id": 665, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":666,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":17},"end":{"line":14,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.256061553955ms
Sending response {"id": 666, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":667,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.452041625977ms
Sending response {"id": 667, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":636},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza +)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":638},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza +1 )\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":668,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.635862350464ms
Sending response {"id": 668, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":669,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.31304359436ms
Sending response {"id": 669, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":670,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.13296508789ms
Sending response {"id": 670, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":640},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza +)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":642},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":671,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.24900245667ms
Sending response {"id": 671, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":672,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.969886779785ms
Sending response {"id": 672, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":673,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.92491912842ms
Sending response {"id": 673, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":674,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.43194198608ms
Sending response {"id": 674, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":643},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":675,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.89401817322ms
Sending response {"id": 675, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":676,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.427007675171ms
Sending response {"id": 676, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":677,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":13,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.385046005249ms
Sending response {"id": 677, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":678,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 1.59192085266ms
Sending response {"id": 678, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":644},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) n\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":679,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.51300430298ms
Sending response {"id": 679, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":647},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) nasl\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":680,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.41501426697ms
Sending response {"id": 680, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":681,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":26},"end":{"line":14,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.591993331909ms
Sending response {"id": 681, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":682,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.41096115112ms
Sending response {"id": 682, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":648},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":683,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.432014465332ms
Sending response {"id": 683, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":684,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":14,"character":31},"end":{"line":14,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.333070755005ms
Sending response {"id": 684, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":685,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.35612487793ms
Sending response {"id": 685, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":649},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n    \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":686,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.25789642334ms
Sending response {"id": 686, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":687,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.288009643555ms
Sending response {"id": 687, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":650},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":688,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.19981575012ms
Sending response {"id": 688, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":689,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.11293792725ms
Sending response {"id": 689, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":651},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  i\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":690,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":15,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.3279914856ms
Sending response {"id": 690, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":652},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":691,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.08020210266ms
Sending response {"id": 691, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":692,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.737905502319ms
Sending response {"id": 692, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":693,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.479936599731ms
Sending response {"id": 693, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":653},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":694,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.609874725342ms
Sending response {"id": 694, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":695,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.869035720825ms
Sending response {"id": 695, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":654},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":696,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.14290618896ms
Sending response {"id": 696, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":697,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.39284133911ms
Sending response {"id": 697, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":655},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  k\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":698,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.356912612915ms
Sending response {"id": 698, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":659},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":699,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.79195404053ms
Sending response {"id": 699, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":700,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.381946563721ms
Sending response {"id": 700, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":661},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog (())\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":701,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":9}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.427007675171ms
Sending response {"id": 701, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":702,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.358104705811ms
Sending response {"id": 702, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":703,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.327110290527ms
Sending response {"id": 703, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":662},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((L))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":704,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.2760887146ms
Sending response {"id": 704, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":705,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.32513046265ms
Sending response {"id": 705, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":706,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.274181365967ms
Sending response {"id": 706, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":664},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((Lis))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":707,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.08990478516ms
Sending response {"id": 707, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":708,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.862836837769ms
Sending response {"id": 708, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":709,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.96218490601ms
Sending response {"id": 709, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":665},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":666},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":710,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":14},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.248908996582ms
Sending response {"id": 710, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":711,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.341176986694ms
Sending response {"id": 711, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":712,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.328063964844ms
Sending response {"id": 712, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":713,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.86800956726ms
Sending response {"id": 713, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":667},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.l))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":714,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.267028808594ms
Sending response {"id": 714, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":669},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.len))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":715,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.75888633728ms
Sending response {"id": 715, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":716,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.42986869812ms
Sending response {"id": 716, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":717,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.277042388916ms
Sending response {"id": 717, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":670},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":718,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.255107879639ms
Sending response {"id": 718, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":719,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":20},"end":{"line":16,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.253915786743ms
Sending response {"id": 719, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":720,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.21116638184ms
Sending response {"id": 720, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":671},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length ))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":721,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.80785560608ms
Sending response {"id": 721, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":722,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.714063644409ms
Sending response {"id": 722, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":723,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.36096572876ms
Sending response {"id": 723, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":672},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length z))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":724,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.52993202209ms
Sending response {"id": 724, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":673},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length za))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":725,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.25098228455ms
Sending response {"id": 725, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":726,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.31304359436ms
Sending response {"id": 726, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":727,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.446081161499ms
Sending response {"id": 727, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":674},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zac))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":728,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":24},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.306129455566ms
Sending response {"id": 728, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":675},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zace))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":729,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":25},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.279903411865ms
Sending response {"id": 729, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":677},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacete))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":730,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.519990921021ms
Sending response {"id": 730, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":678},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek))\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":731,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":28},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.476837158203ms
Sending response {"id": 731, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":732,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.23596191406ms
Sending response {"id": 732, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":733,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.07288360596ms
Sending response {"id": 733, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":734,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.426054000854ms
Sending response {"id": 734, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":735,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.5709400177ms
Sending response {"id": 735, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":679},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) )\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":736,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0769367218ms
Sending response {"id": 736, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":737,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.78296661377ms
Sending response {"id": 737, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":738,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.669956207275ms
Sending response {"id": 738, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":681},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1)\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":739,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.257015228271ms
Sending response {"id": 739, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":740,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.25200843811ms
Sending response {"id": 740, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":741,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.50196456909ms
Sending response {"id": 741, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":742,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":33},"end":{"line":16,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.10697746277ms
Sending response {"id": 742, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":682},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) \n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":743,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.725030899048ms
Sending response {"id": 743, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":683},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) z\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":744,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":35},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.308990478516ms
Sending response {"id": 744, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":686},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadn\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":745,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.310897827148ms
Sending response {"id": 745, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":687},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnj\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":746,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":39},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.257968902588ms
Sending response {"id": 746, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":747,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.75888633728ms
Sending response {"id": 747, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":748,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":39},"end":{"line":16,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.402927398682ms
Sending response {"id": 748, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":749,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.22897529602ms
Sending response {"id": 749, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":688},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":750,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":16,"character":40},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.237941741943ms
Sending response {"id": 750, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":751,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.612020492554ms
Sending response {"id": 751, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":752,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":40},"end":{"line":16,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.277042388916ms
Sending response {"id": 752, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":753,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.342130661011ms
Sending response {"id": 753, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":754,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 1.78503990173ms
Sending response {"id": 754, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":755,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.02686882019ms
Sending response {"id": 755, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":756,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 2.02202796936ms
Sending response {"id": 756, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":689},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n s= \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":694},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string= \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":757,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.45795059204ms
Sending response {"id": 757, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":758,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.824213027954ms
Sending response {"id": 758, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":759,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.275850296021ms
Sending response {"id": 759, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":695},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":760,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.94096565247ms
Sending response {"id": 760, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":761,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.542879104614ms
Sending response {"id": 761, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":762,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":27},"end":{"line":6,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.953912734985ms
Sending response {"id": 762, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":696},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string =\n \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":763,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.715017318726ms
Sending response {"id": 763, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":764,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.272035598755ms
Sending response {"id": 764, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":697},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string =\n  \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":765,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.06899642944ms
Sending response {"id": 765, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":766,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.324964523315ms
Sending response {"id": 766, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":698},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string =\n  l\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":767,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.57189369202ms
Sending response {"id": 767, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":701},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n string =\n  let \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":768,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.280141830444ms
Sending response {"id": 768, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":769,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.42288208008ms
Sending response {"id": 769, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":770,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.332832336426ms
Sending response {"id": 770, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":771,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 1.13391876221ms
Sending response {"id": 771, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":772,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.19209289551ms
Sending response {"id": 772, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":773,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.88302993774ms
Sending response {"id": 773, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":704},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":774,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.15299224854ms
Sending response {"id": 774, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":775,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.391006469727ms
Sending response {"id": 775, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":776,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.850915908813ms
Sending response {"id": 776, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":705},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let p\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":777,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.277042388916ms
Sending response {"id": 777, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":708},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":778,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.275135040283ms
Sending response {"id": 778, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":779,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.61600112915ms
Sending response {"id": 779, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":780,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.391960144043ms
Sending response {"id": 780, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":781,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.243902206421ms
Sending response {"id": 781, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":709},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":782,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.253915786743ms
Sending response {"id": 782, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":783,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.635862350464ms
Sending response {"id": 783, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":784,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.431060791016ms
Sending response {"id": 784, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":785,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.338077545166ms
Sending response {"id": 785, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":710},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_b\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":786,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.288009643555ms
Sending response {"id": 786, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":711},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_br\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":787,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.272989273071ms
Sending response {"id": 787, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":713},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":788,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.236988067627ms
Sending response {"id": 788, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":789,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.22594833374ms
Sending response {"id": 789, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":790,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.288009643555ms
Sending response {"id": 790, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":791,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.478029251099ms
Sending response {"id": 791, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":714},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":792,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.266075134277ms
Sending response {"id": 792, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":793,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.78010559082ms
Sending response {"id": 793, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":794,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.347852706909ms
Sending response {"id": 794, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":715},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_z\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":795,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.226974487305ms
Sending response {"id": 795, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":717},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zad\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":796,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.17206573486ms
Sending response {"id": 796, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":718},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zadn\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":797,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.306844711304ms
Sending response {"id": 797, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":720},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zadnje\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":798,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.32901763916ms
Sending response {"id": 798, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":799,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 5.11598587036ms
Sending response {"id": 799, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":800,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.643014907837ms
Sending response {"id": 800, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":721},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zadnjeg\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":801,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.03902816772ms
Sending response {"id": 801, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":722},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zadnjega\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":802,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":24},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.32901763916ms
Sending response {"id": 802, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":723},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let prvi_brez_zadnjeg\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":803,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0199546814ms
Sending response {"id": 803, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":804,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":23},"end":{"line":7,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.898122787476ms
Sending response {"id": 804, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":805,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.519037246704ms
Sending response {"id": 805, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":738},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let pr\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":739},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let p\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":740},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":741},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let s\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":806,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.31304359436ms
Sending response {"id": 806, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":743},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":807,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.48677825928ms
Sending response {"id": 807, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":808,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.917911529541ms
Sending response {"id": 808, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":809,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.418901443481ms
Sending response {"id": 809, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":744},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":810,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.00302696228ms
Sending response {"id": 810, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":811,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.62084197998ms
Sending response {"id": 811, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":746},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_br\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":812,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.332117080688ms
Sending response {"id": 812, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":748},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":813,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.370025634766ms
Sending response {"id": 813, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":814,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.23078918457ms
Sending response {"id": 814, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":815,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.441074371338ms
Sending response {"id": 815, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":816,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.448942184448ms
Sending response {"id": 816, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":749},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":817,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.281095504761ms
Sending response {"id": 817, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":818,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.22103500366ms
Sending response {"id": 818, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":819,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.964164733887ms
Sending response {"id": 819, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":750},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_z\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":820,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.257015228271ms
Sending response {"id": 820, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":751},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_za\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":752},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zad\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":821,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.432014465332ms
Sending response {"id": 821, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":755},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnje\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":822,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":21},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.777006149292ms
Sending response {"id": 822, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":758},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":760},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega ? \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":823,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.00097465515ms
Sending response {"id": 823, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":764},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":824,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.348806381226ms
Sending response {"id": 824, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":825,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.384973526ms
Sending response {"id": 825, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":826,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.534057617188ms
Sending response {"id": 826, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":827,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.272035598755ms
Sending response {"id": 827, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":828,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.13296508789ms
Sending response {"id": 828, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":765},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = zacetek |> List.rev |> List.tl |> List.rev\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":829,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/definition
[server] processing took 0.485897064209ms
Sending response {"id": 829, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":830,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/definition
[server] processing took 1.24311447144ms
Sending response {"id": 830, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":831,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.09100341797ms
Sending response {"id": 831, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":832,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":68},"end":{"line":7,"character":68}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.53596496582ms
Sending response {"id": 832, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":833,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.79083442688ms
Sending response {"id": 833, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":834,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.355005264282ms
Sending response {"id": 834, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":835,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 1.72090530396ms
Sending response {"id": 835, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":836,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 2.47502326965ms
Sending response {"id": 836, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":837,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 1.5709400177ms
Sending response {"id": 837, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":767},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = zacetek |> List.rev |> List.tl |> List.rev i\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":838,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":70},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.436067581177ms
Sending response {"id": 838, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":769},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = zacetek |> List.rev |> List.tl |> List.rev in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":839,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.760078430176ms
Sending response {"id": 839, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":840,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.402927398682ms
Sending response {"id": 840, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":841,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.88095664978ms
Sending response {"id": 841, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":842,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.535011291504ms
Sending response {"id": 842, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":843,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.629901885986ms
Sending response {"id": 843, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":844,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.442028045654ms
Sending response {"id": 844, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":845,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":31},"end":{"line":7,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.16109848022ms
Sending response {"id": 845, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":846,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.295162200928ms
Sending response {"id": 846, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":847,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":26},"end":{"line":7,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.57301330566ms
Sending response {"id": 847, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":770},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = s |> List.rev |> List.tl |> List.rev in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":848,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.282049179077ms
Sending response {"id": 848, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":771},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = se |> List.rev |> List.tl |> List.rev in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":772},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":849,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.32901763916ms
Sending response {"id": 849, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":850,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":29},"end":{"line":7,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.243186950684ms
Sending response {"id": 850, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":851,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.352144241333ms
Sending response {"id": 851, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":852,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":35}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.756978988647ms
Sending response {"id": 852, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":853,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":35},"end":{"line":7,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.47795677185ms
Sending response {"id": 853, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":773},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":854,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.936985015869ms
Sending response {"id": 854, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":855,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.926971435547ms
Sending response {"id": 855, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":774},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  l\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":856,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.305891036987ms
Sending response {"id": 856, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":775},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  le\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":857,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.335931777954ms
Sending response {"id": 857, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":858,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.288009643555ms
Sending response {"id": 858, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":859,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.865936279297ms
Sending response {"id": 859, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":776},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":860,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.73711776733ms
Sending response {"id": 860, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":861,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.817060470581ms
Sending response {"id": 861, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":862,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.54407119751ms
Sending response {"id": 862, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":777},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":863,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.556945800781ms
Sending response {"id": 863, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":778},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let z\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":864,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.324010848999ms
Sending response {"id": 864, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":781},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadn\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":784},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":865,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.34198570251ms
Sending response {"id": 865, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":866,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.645160675049ms
Sending response {"id": 866, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":786},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":867,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.452041625977ms
Sending response {"id": 867, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":868,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.01184844971ms
Sending response {"id": 868, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":787},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = i\n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":869,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.34499168396ms
Sending response {"id": 869, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":789},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":870,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.22308731079ms
Sending response {"id": 870, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":871,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.416040420532ms
Sending response {"id": 871, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":872,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":17}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.254154205322ms
Sending response {"id": 872, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":873,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.42884254456ms
Sending response {"id": 873, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":874,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.10697746277ms
Sending response {"id": 874, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":875,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 1.85799598694ms
Sending response {"id": 875, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":876,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":15}}}
[server] Got a method textDocument/definition
[server] processing took 5.6209564209ms
Sending response {"id": 876, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":877,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.3662109375ms
Sending response {"id": 877, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":878,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.93898582458ms
Sending response {"id": 878, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":878}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":790},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = zacetek |> List.rev |> List.hdin \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":879,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.72114372253ms
Sending response {"id": 879, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":880,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":45},"end":{"line":8,"character":45}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.405073165894ms
Sending response {"id": 880, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":791},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = zacetek |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":881,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.27410888672ms
Sending response {"id": 881, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":882,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":46},"end":{"line":8,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.965118408203ms
Sending response {"id": 882, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":883,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.868082046509ms
Sending response {"id": 883, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":884,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.309944152832ms
Sending response {"id": 884, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":885,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.28395652771ms
Sending response {"id": 885, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":886,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.3500919342ms
Sending response {"id": 886, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":792},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = s |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":887,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.380992889404ms
Sending response {"id": 887, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":794},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length zacetek) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":888,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.960111618042ms
Sending response {"id": 888, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":889,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.759124755859ms
Sending response {"id": 889, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":890,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.539064407349ms
Sending response {"id": 890, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":891,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":23}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.519990921021ms
Sending response {"id": 891, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":892,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":23},"end":{"line":7,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.462055206299ms
Sending response {"id": 892, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":893,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 1.41906738281ms
Sending response {"id": 893, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":894,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 0.288963317871ms
Sending response {"id": 894, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":895,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":37}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 2.16698646545ms
Sending response {"id": 895, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":896,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":37},"end":{"line":18,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.4790763855ms
Sending response {"id": 896, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":897,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 1.95002555847ms
Sending response {"id": 897, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":898,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":40},"end":{"line":18,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.53398513794ms
Sending response {"id": 898, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":899,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.473022460938ms
Sending response {"id": 899, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":900,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.475168228149ms
Sending response {"id": 900, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":901,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.994920730591ms
Sending response {"id": 901, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":795},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length s) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":902,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":18,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.288963317871ms
Sending response {"id": 902, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":796},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length se) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":903,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.920057296753ms
Sending response {"id": 903, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":904,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":23},"end":{"line":18,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.336885452271ms
Sending response {"id": 904, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":797},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":905,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.694036483765ms
Sending response {"id": 905, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":906,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":18,"character":24},"end":{"line":18,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.246047973633ms
Sending response {"id": 906, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":907,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.442981719971ms
Sending response {"id": 907, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":798},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":908,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.980138778687ms
Sending response {"id": 908, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":909,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.57022476196ms
Sending response {"id": 909, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":798},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":798}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":910,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.455141067505ms
Sending response {"id": 910, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":911,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":67}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.421047210693ms
Sending response {"id": 911, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":912,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.68998336792ms
Sending response {"id": 912, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":913,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":67}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.45602226257ms
Sending response {"id": 913, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":914,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.470161437988ms
Sending response {"id": 914, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":799},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":915,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.334024429321ms
Sending response {"id": 915, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":916,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.202178955078ms
Sending response {"id": 916, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":917,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.438213348389ms
Sending response {"id": 917, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":799},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":799}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":918,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 6.14500045776ms
Sending response {"id": 918, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":919,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":45}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 2.08497047424ms
Sending response {"id": 919, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":920,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.92985343933ms
Sending response {"id": 920, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":921,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":45}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.384092330933ms
Sending response {"id": 921, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":800},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":922,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.470876693726ms
Sending response {"id": 922, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":923,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.71899795532ms
Sending response {"id": 923, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":801},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) ne_zadnji;\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":924,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.679969787598ms
Sending response {"id": 924, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":925,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":56},"end":{"line":10,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.339031219482ms
Sending response {"id": 925, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":926,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.55091285706ms
Sending response {"id": 926, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":927,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 1.59001350403ms
Sending response {"id": 927, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":928,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 1.61504745483ms
Sending response {"id": 928, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":929,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.477075576782ms
Sending response {"id": 929, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":930,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":51}}}
[server] Got a method textDocument/hover
[server] processing took 1.04403495789ms
Sending response {"id": 930, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":931,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":52}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.344038009644ms
Sending response {"id": 931, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":932,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":52},"end":{"line":10,"character":52}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.314950942993ms
Sending response {"id": 932, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":933,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":46}}}
[server] Got a method textDocument/hover
[server] processing took 0.853061676025ms
Sending response {"id": 933, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":934,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":46},"end":{"line":10,"character":49}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.701904296875ms
Sending response {"id": 934, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":935,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":46},"end":{"line":10,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.4431476593ms
Sending response {"id": 935, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":936,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":46},"end":{"line":10,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.958919525146ms
Sending response {"id": 936, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":937,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":54}}}
[server] Got a method textDocument/hover
[server] processing took 1.43313407898ms
Sending response {"id": 937, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":802},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) s;\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":938,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.334024429321ms
Sending response {"id": 938, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":804},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez;\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":939,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.794887542725ms
Sending response {"id": 939, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":940,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":49},"end":{"line":10,"character":49}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.424146652222ms
Sending response {"id": 940, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":941,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.293016433716ms
Sending response {"id": 941, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":805},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  (* let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in  *)\n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":942,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.427007675171ms
Sending response {"id": 942, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":943,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":63},"end":{"line":10,"character":63}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.340938568115ms
Sending response {"id": 943, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":944,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.45697593689ms
Sending response {"id": 944, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":945,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":74}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.25694274902ms
Sending response {"id": 945, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":946,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.73504447937ms
Sending response {"id": 946, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":806},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":947,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.81205368042ms
Sending response {"id": 947, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":948,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":68}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.615119934082ms
Sending response {"id": 948, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":949,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.935792922974ms
Sending response {"id": 949, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":950,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.536203384399ms
Sending response {"id": 950, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":951,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 3.61800193787ms
Sending response {"id": 951, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":952,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.24406814575ms
Sending response {"id": 952, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":953,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":9,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.53596496582ms
Sending response {"id": 953, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":954,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":48}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.653028488159ms
Sending response {"id": 954, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":955,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":48},"end":{"line":10,"character":48}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.44195556641ms
Sending response {"id": 955, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":956,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":64},"end":{"line":10,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.536203384399ms
Sending response {"id": 956, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":809},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   \n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":957,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.777006149292ms
Sending response {"id": 957, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":958,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.53596496582ms
Sending response {"id": 958, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":810},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   ()\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":959,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":68}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.422954559326ms
Sending response {"id": 959, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":960,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.59406661987ms
Sending response {"id": 960, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":961,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":68},"end":{"line":10,"character":68}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.59986114502ms
Sending response {"id": 961, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":811},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":962,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.06811523438ms
Sending response {"id": 962, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":963,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":69},"end":{"line":10,"character":69}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.02710723877ms
Sending response {"id": 963, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":964,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.06501579285ms
Sending response {"id": 964, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":812},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (** *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":965,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.813007354736ms
Sending response {"id": 965, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":966,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":70},"end":{"line":10,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.594139099121ms
Sending response {"id": 966, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":967,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.47795677185ms
Sending response {"id": 967, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":813},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (* *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":815},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":821},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to morem *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":968,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.220060348511ms
Sending response {"id": 968, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":969,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":77},"end":{"line":10,"character":77}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.321865081787ms
Sending response {"id": 969, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":822},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to morem  *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":970,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.298976898193ms
Sending response {"id": 970, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":823},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to morem u *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":843},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":971,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.21092796326ms
Sending response {"id": 971, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":972,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":99},"end":{"line":10,"character":99}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.424861907959ms
Sending response {"id": 972, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":973,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.604152679443ms
Sending response {"id": 973, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":974,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":16,"character":34},"end":{"line":16,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.28507614136ms
Sending response {"id": 974, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":843},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> spomin.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":843}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":975,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.06692314148ms
Sending response {"id": 975, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":976,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":12,"character":46}}}
[server] Got a method textDocument/hover
[server] processing took 1.7421245575ms
Sending response {"id": 976, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":977,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.46913528442ms
Sending response {"id": 977, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":978,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.33993339539ms
Sending response {"id": 978, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":979,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":27},"end":{"line":10,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.620126724243ms
Sending response {"id": 979, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":980,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":25},"end":{"line":10,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.11389160156ms
Sending response {"id": 980, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":844},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> p.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":981,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":26},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.595092773438ms
Sending response {"id": 981, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":845},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> pr.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":849},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":982,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.64716148376ms
Sending response {"id": 982, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":983,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":31},"end":{"line":10,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.428915023804ms
Sending response {"id": 983, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":984,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.361919403076ms
Sending response {"id": 984, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":850},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":985,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.32903862ms
Sending response {"id": 985, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":986,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.578880310059ms
Sending response {"id": 986, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":850},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":850}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":987,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.1510848999ms
Sending response {"id": 987, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":988,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.808954238892ms
Sending response {"id": 988, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":989,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.576019287109ms
Sending response {"id": 989, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":990,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.462055206299ms
Sending response {"id": 990, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":855},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":991,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.345945358276ms
Sending response {"id": 991, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":992,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.251054763794ms
Sending response {"id": 992, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":856},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    i\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":993,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.370025634766ms
Sending response {"id": 993, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":858},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    int\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":994,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.519990921021ms
Sending response {"id": 994, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":995,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.267028808594ms
Sending response {"id": 995, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":996,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.399112701416ms
Sending response {"id": 996, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":861},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":997,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.288963317871ms
Sending response {"id": 997, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":862},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    s\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":998,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.284910202026ms
Sending response {"id": 998, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":863},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    st\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":864},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    sti\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":999,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.28920173645ms
Sending response {"id": 999, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1000,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.207185745239ms
Sending response {"id": 1000, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1001,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.387907028198ms
Sending response {"id": 1001, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":865},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    st\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1002,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.220060348511ms
Sending response {"id": 1002, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1003,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":6},"end":{"line":24,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.283002853394ms
Sending response {"id": 1003, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1004,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.399112701416ms
Sending response {"id": 1004, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":866},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    stt\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1005,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.34499168396ms
Sending response {"id": 1005, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1006,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.858068466187ms
Sending response {"id": 1006, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":871},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1007,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.325918197632ms
Sending response {"id": 1007, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1008,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":10},"end":{"line":24,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.265836715698ms
Sending response {"id": 1008, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1009,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.332117080688ms
Sending response {"id": 1009, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":872},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1010,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.554084777832ms
Sending response {"id": 1010, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1011,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":11},"end":{"line":24,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.32901763916ms
Sending response {"id": 1011, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1012,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.431060791016ms
Sending response {"id": 1012, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":873},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_o\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1013,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.265121459961ms
Sending response {"id": 1013, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":874},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1014,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.312089920044ms
Sending response {"id": 1014, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1015,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.369071960449ms
Sending response {"id": 1015, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1016,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":13},"end":{"line":24,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.21505355835ms
Sending response {"id": 1016, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":875},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1017,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.338077545166ms
Sending response {"id": 1017, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1018,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.303983688354ms
Sending response {"id": 1018, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1019,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":14},"end":{"line":24,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.232934951782ms
Sending response {"id": 1019, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":876},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_i\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1020,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.289916992188ms
Sending response {"id": 1020, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":877},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_in\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1021,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.264883041382ms
Sending response {"id": 1021, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":879},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int \n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1022,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.523090362549ms
Sending response {"id": 1022, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1023,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.288009643555ms
Sending response {"id": 1023, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":880},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int ()\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1024,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":19}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.324964523315ms
Sending response {"id": 1024, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1025,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.286817550659ms
Sending response {"id": 1025, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1026,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":19},"end":{"line":24,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.256061553955ms
Sending response {"id": 1026, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1027,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.325918197632ms
Sending response {"id": 1027, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":881},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1028,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.31304359436ms
Sending response {"id": 1028, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1029,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.32901763916ms
Sending response {"id": 1029, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1030,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":20},"end":{"line":24,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.236034393311ms
Sending response {"id": 1030, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1031,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.419139862061ms
Sending response {"id": 1031, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":882},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1032,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.297069549561ms
Sending response {"id": 1032, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1033,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":21},"end":{"line":24,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.272035598755ms
Sending response {"id": 1033, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1034,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.42986869812ms
Sending response {"id": 1034, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":884},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1035,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.231027603149ms
Sending response {"id": 1035, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1036,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":23},"end":{"line":24,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.218152999878ms
Sending response {"id": 1036, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1037,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.381946563721ms
Sending response {"id": 1037, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":885},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1038,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.334978103638ms
Sending response {"id": 1038, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1039,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":31},"end":{"line":24,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.262975692749ms
Sending response {"id": 1039, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1040,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.334024429321ms
Sending response {"id": 1040, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":886},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element )\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1041,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.404119491577ms
Sending response {"id": 1041, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1042,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":32},"end":{"line":24,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.262975692749ms
Sending response {"id": 1042, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1043,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.430107116699ms
Sending response {"id": 1043, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":890},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1044,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.20704078674ms
Sending response {"id": 1044, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1045,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":36},"end":{"line":24,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.226020812988ms
Sending response {"id": 1045, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1046,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.353097915649ms
Sending response {"id": 1046, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":891},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 )\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1047,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.279903411865ms
Sending response {"id": 1047, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1048,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":37},"end":{"line":24,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.315189361572ms
Sending response {"id": 1048, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1049,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.391960144043ms
Sending response {"id": 1049, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":892},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 i)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1050,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.622987747192ms
Sending response {"id": 1050, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":896},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1051,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.290870666504ms
Sending response {"id": 1051, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1052,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":42},"end":{"line":24,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.249862670898ms
Sending response {"id": 1052, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":897},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1053,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.262022018433ms
Sending response {"id": 1053, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1054,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.386953353882ms
Sending response {"id": 1054, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":897},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n(* open Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2 *)\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":897}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1055,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.14798545837ms
Sending response {"id": 1055, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1056,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":28,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.351905822754ms
Sending response {"id": 1056, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1057,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.53779983521ms
Sending response {"id": 1057, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1058,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":30,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.365018844604ms
Sending response {"id": 1058, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1059,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":31,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.04999542236ms
Sending response {"id": 1059, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1060,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":31,"character":7},"end":{"line":31,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.2760887146ms
Sending response {"id": 1060, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1061,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":71,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04904174805ms
Sending response {"id": 1061, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1062,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":56,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.360012054443ms
Sending response {"id": 1062, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1063,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":55,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.329971313477ms
Sending response {"id": 1063, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1064,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":55,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.409126281738ms
Sending response {"id": 1064, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":898},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\nopen Containers\n\nlet start =\n  IO.read_all stdin |> String.rtrim |> String.split_on_char ','\n  |> List.map int_of_string\n\nlet start_less_last, last =\n  List.take_drop (List.length start - 1) start |> Pair.map_snd List.hd\n\nlet nth n =\n  let tbl = Array.make n 0 in\n  List.iteri (fun i num -> tbl.(num) <- i + 1) start_less_last;\n  let rec turn ith recent =\n    if ith = n + 1 then recent\n    else\n      let next = match tbl.(recent) with\n        | 0 -> 0\n        | last_ith -> ith - 1 - last_ith\n      in\n      tbl.(recent) <- ith - 1;\n      turn (ith + 1) next\n  in turn (List.length start + 1) last\n\nlet part1 = nth 2020\nlet part2 = nth 30000000\n\nlet () = Printf.printf \"%d %d\\n\" part1 part2\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1065,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.380992889404ms
Sending response {"id": 1065, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1066,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.282049179077ms
Sending response {"id": 1066, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1067,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":57,"character":2},"end":{"line":71,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.576972961426ms
Sending response {"id": 1067, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1068,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":54,"character":44}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.527143478394ms
Sending response {"id": 1068, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1069,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":54,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.648975372314ms
Sending response {"id": 1069, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1070,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":0},"end":{"line":54,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.405073165894ms
Sending response {"id": 1070, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1071,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":30,"character":0},"end":{"line":54,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.274896621704ms
Sending response {"id": 1071, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1072,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":0},"end":{"line":54,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.399827957153ms
Sending response {"id": 1072, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":899},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\n\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1073,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.498056411743ms
Sending response {"id": 1073, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1074,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.518083572388ms
Sending response {"id": 1074, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":901},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\n(* let _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1; *)"}]}}
Read message 
{"jsonrpc":"2.0","id":1075,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.308990478516ms
Sending response {"id": 1075, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1076,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.397920608521ms
Sending response {"id": 1076, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1077,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.422954559326ms
Sending response {"id": 1077, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1078,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":0},"end":{"line":43,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.385046005249ms
Sending response {"id": 1078, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":902},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1079,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.268936157227ms
Sending response {"id": 1079, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1080,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":0},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.195980072021ms
Sending response {"id": 1080, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1081,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.387191772461ms
Sending response {"id": 1081, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1082,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.250101089478ms
Sending response {"id": 1082, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1083,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":35,"character":21},"end":{"line":35,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.330924987793ms
Sending response {"id": 1083, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1084,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":20}}}
[server] Got a method textDocument/hover
[server] processing took 0.37693977356ms
Sending response {"id": 1084, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1085,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.439167022705ms
Sending response {"id": 1085, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1086,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.325202941895ms
Sending response {"id": 1086, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1087,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.303030014038ms
Sending response {"id": 1087, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1088,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.411987304688ms
Sending response {"id": 1088, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1089,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.447988510132ms
Sending response {"id": 1089, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1090,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.280857086182ms
Sending response {"id": 1090, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1091,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":46}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.42788887024ms
Sending response {"id": 1091, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1092,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":46},"end":{"line":40,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.334024429321ms
Sending response {"id": 1092, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1093,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":51}}}
[server] Got a method textDocument/hover
[server] processing took 0.308990478516ms
Sending response {"id": 1093, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1094,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":51},"end":{"line":40,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.42986869812ms
Sending response {"id": 1094, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1095,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":51}}}
[server] Got a method textDocument/hover
[server] processing took 0.370979309082ms
Sending response {"id": 1095, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":903},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_1/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":904},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1096,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.366926193237ms
Sending response {"id": 1096, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1097,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":51},"end":{"line":40,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.279903411865ms
Sending response {"id": 1097, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1098,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.494003295898ms
Sending response {"id": 1098, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1099,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":57}}}
[server] Got a method textDocument/hover
[server] processing took 0.448942184448ms
Sending response {"id": 1099, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1100,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":57}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.245094299316ms
Sending response {"id": 1100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":57},"end":{"line":40,"character":57}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.342130661011ms
Sending response {"id": 1101, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":58},"end":{"line":40,"character":58}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.375986099243ms
Sending response {"id": 1102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":906},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1103,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.322103500366ms
Sending response {"id": 1103, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":40,"character":58},"end":{"line":40,"character":58}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.394105911255ms
Sending response {"id": 1104, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.319957733154ms
Sending response {"id": 1105, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":43,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.589847564697ms
Sending response {"id": 1106, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1107,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":43,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.396966934204ms
Sending response {"id": 1107, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":43,"character":27},"end":{"line":43,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.261068344116ms
Sending response {"id": 1108, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":908},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_13_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1109,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.313997268677ms
Sending response {"id": 1109, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":43,"character":27},"end":{"line":43,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.260829925537ms
Sending response {"id": 1110, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.289916992188ms
Sending response {"id": 1111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1112,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":43,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.272989273071ms
Sending response {"id": 1112, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":43,"character":34},"end":{"line":43,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.322818756104ms
Sending response {"id": 1113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":910},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1114,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.323057174683ms
Sending response {"id": 1114, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":43,"character":34},"end":{"line":43,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.308990478516ms
Sending response {"id": 1115, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1116,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.301837921143ms
Sending response {"id": 1116, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.414133071899ms
Sending response {"id": 1117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1118,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.328063964844ms
Sending response {"id": 1118, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":41,"character":39},"end":{"line":41,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.346183776855ms
Sending response {"id": 1119, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.339031219482ms
Sending response {"id": 1120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.447034835815ms
Sending response {"id": 1121, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.262975692749ms
Sending response {"id": 1122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":41,"character":39},"end":{"line":41,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.92999839783ms
Sending response {"id": 1123, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1124,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.720977783203ms
Sending response {"id": 1124, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1125,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":38,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.422954559326ms
Sending response {"id": 1125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.436067581177ms
Sending response {"id": 1126, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1127,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":35,"character":27}}}
[server] Got a method textDocument/definition
[server] processing took 0.426054000854ms
Sending response {"id": 1127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":910},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":910}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1128,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.560998916626ms
Sending response {"id": 1128, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":40,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.255107879639ms
Sending response {"id": 1129, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.500917434692ms
Sending response {"id": 1130, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.397920608521ms
Sending response {"id": 1131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.395059585571ms
Sending response {"id": 1132, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.385999679565ms
Sending response {"id": 1133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.340938568115ms
Sending response {"id": 1134, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.419139862061ms
Sending response {"id": 1135, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.266075134277ms
Sending response {"id": 1136, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1137,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.707864761353ms
Sending response {"id": 1137, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.329971313477ms
Sending response {"id": 1138, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.367879867554ms
Sending response {"id": 1139, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.380039215088ms
Sending response {"id": 1140, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":911},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1141,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.2601146698ms
Sending response {"id": 1141, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.212907791138ms
Sending response {"id": 1142, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1143,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.307083129883ms
Sending response {"id": 1143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":911},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":911}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1144,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.364065170288ms
Sending response {"id": 1144, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 3.1430721283ms
Sending response {"id": 1145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1146,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.500917434692ms
Sending response {"id": 1146, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.455856323242ms
Sending response {"id": 1147, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1148,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.289916992188ms
Sending response {"id": 1148, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.26798248291ms
Sending response {"id": 1149, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.393867492676ms
Sending response {"id": 1150, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":913},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1151,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.288009643555ms
Sending response {"id": 1151, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1152,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.393867492676ms
Sending response {"id": 1152, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":914},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1153,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.263929367065ms
Sending response {"id": 1153, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":918},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":919},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.264883041382ms
Sending response {"id": 1154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1155,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.386953353882ms
Sending response {"id": 1155, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.519990921021ms
Sending response {"id": 1156, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":919},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":919}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1157,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.32901763916ms
Sending response {"id": 1157, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":22,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.36096572876ms
Sending response {"id": 1158, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1159,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.03306770325ms
Sending response {"id": 1159, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1160,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.35111808777ms
Sending response {"id": 1160, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1161,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.319004058838ms
Sending response {"id": 1161, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1162,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.415086746216ms
Sending response {"id": 1162, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1163,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.405073165894ms
Sending response {"id": 1163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":920},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1164,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.330924987793ms
Sending response {"id": 1164, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.441074371338ms
Sending response {"id": 1165, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":921},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1166,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.293016433716ms
Sending response {"id": 1166, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1167,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.561952590942ms
Sending response {"id": 1167, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.344038009644ms
Sending response {"id": 1168, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.37693977356ms
Sending response {"id": 1169, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":922},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1170,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.323057174683ms
Sending response {"id": 1170, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.258922576904ms
Sending response {"id": 1171, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.335931777954ms
Sending response {"id": 1172, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":923},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1173,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.342130661011ms
Sending response {"id": 1173, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1174,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.802040100098ms
Sending response {"id": 1174, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":928},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1175,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.293970108032ms
Sending response {"id": 1175, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.247955322266ms
Sending response {"id": 1176, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":929},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1177,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.288009643555ms
Sending response {"id": 1177, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":930},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1178,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.286817550659ms
Sending response {"id": 1178, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":24},"end":{"line":24,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.221967697144ms
Sending response {"id": 1179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1180,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.277042388916ms
Sending response {"id": 1180, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":931},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1181,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.239133834839ms
Sending response {"id": 1181, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.224828720093ms
Sending response {"id": 1182, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.324010848999ms
Sending response {"id": 1183, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":931},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":931}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1184,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.50418281555ms
Sending response {"id": 1184, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.601053237915ms
Sending response {"id": 1185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1186,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.37090682983ms
Sending response {"id": 1186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.447988510132ms
Sending response {"id": 1187, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1188,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.895977020264ms
Sending response {"id": 1188, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 2.2931098938ms
Sending response {"id": 1189, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1190,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 3.18503379822ms
Sending response {"id": 1190, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1191,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.272035598755ms
Sending response {"id": 1191, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04093551636ms
Sending response {"id": 1192, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1193,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 1.30295753479ms
Sending response {"id": 1193, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":932},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1194,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.317096710205ms
Sending response {"id": 1194, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":933},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":934},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    inp\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":936},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1195,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.863075256348ms
Sending response {"id": 1195, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.468015670776ms
Sending response {"id": 1196, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.858068466187ms
Sending response {"id": 1197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":937},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1198,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.88398361206ms
Sending response {"id": 1198, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1199,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.31304359436ms
Sending response {"id": 1199, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":937},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":937}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1200,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.01089477539ms
Sending response {"id": 1200, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.501871109009ms
Sending response {"id": 1201, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.245094299316ms
Sending response {"id": 1202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.985145568848ms
Sending response {"id": 1203, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1204,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.524044036865ms
Sending response {"id": 1204, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1205,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.04906272888ms
Sending response {"id": 1205, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":942},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1206,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.378847122192ms
Sending response {"id": 1206, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1207,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.623941421509ms
Sending response {"id": 1207, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":943},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    N\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1208,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.308036804199ms
Sending response {"id": 1208, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.07097625732ms
Sending response {"id": 1209, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.982046127319ms
Sending response {"id": 1210, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.518083572388ms
Sending response {"id": 1211, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":944},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    N-\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1212,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.469923019409ms
Sending response {"id": 1212, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":6},"end":{"line":24,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.463962554932ms
Sending response {"id": 1213, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1214,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.456094741821ms
Sending response {"id": 1214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":946},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1215,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.527143478394ms
Sending response {"id": 1215, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":947},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1216,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.311136245728ms
Sending response {"id": 1216, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1217,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.782012939453ms
Sending response {"id": 1217, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.363111495972ms
Sending response {"id": 1218, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":948},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":950},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1219,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.676155090332ms
Sending response {"id": 1219, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":8},"end":{"line":24,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.262022018433ms
Sending response {"id": 1220, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":951},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1221,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.865936279297ms
Sending response {"id": 1221, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.35819816589ms
Sending response {"id": 1222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":952},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1223,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.539064407349ms
Sending response {"id": 1223, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.75499916077ms
Sending response {"id": 1224, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":957},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1225,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0678768158ms
Sending response {"id": 1225, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.67298316956ms
Sending response {"id": 1226, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":958},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1227,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.257968902588ms
Sending response {"id": 1227, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":962},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1228,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.563859939575ms
Sending response {"id": 1228, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.66614151001ms
Sending response {"id": 1229, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.653028488159ms
Sending response {"id": 1230, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":963},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1231,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.05612182617ms
Sending response {"id": 1231, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1232,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.46698951721ms
Sending response {"id": 1232, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1233,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 2.05111503601ms
Sending response {"id": 1233, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1234,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 1.25217437744ms
Sending response {"id": 1234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1235,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 1.1670589447ms
Sending response {"id": 1235, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1236,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04403495789ms
Sending response {"id": 1236, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":963},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":963}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1237,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.380992889404ms
Sending response {"id": 1237, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.375986099243ms
Sending response {"id": 1238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 1.05810165405ms
Sending response {"id": 1239, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1240,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.64914131165ms
Sending response {"id": 1240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1241,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.72090530396ms
Sending response {"id": 1241, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.09696388245ms
Sending response {"id": 1242, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":969},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    stringn_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1243,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.550985336304ms
Sending response {"id": 1243, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":10},"end":{"line":24,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.354051589966ms
Sending response {"id": 1244, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1245,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.68299674988ms
Sending response {"id": 1245, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":970},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1246,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.369787216187ms
Sending response {"id": 1246, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":11},"end":{"line":24,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.329971313477ms
Sending response {"id": 1247, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":972},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_ofn_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1248,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.834941864014ms
Sending response {"id": 1248, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":13},"end":{"line":24,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.839948654175ms
Sending response {"id": 1249, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.607013702393ms
Sending response {"id": 1250, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":973},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1251,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.07097625732ms
Sending response {"id": 1251, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":14},"end":{"line":24,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.14607810974ms
Sending response {"id": 1252, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":977},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1253,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.933885574341ms
Sending response {"id": 1253, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1254,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":18},"end":{"line":24,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.857830047607ms
Sending response {"id": 1254, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1255,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.712871551514ms
Sending response {"id": 1255, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":978},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1256,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":19}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.238180160522ms
Sending response {"id": 1256, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1257,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.68998336792ms
Sending response {"id": 1257, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":19},"end":{"line":24,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.552892684937ms
Sending response {"id": 1258, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1259,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.42502784729ms
Sending response {"id": 1259, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1260,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.539064407349ms
Sending response {"id": 1260, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":42},"end":{"line":24,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.69801712036ms
Sending response {"id": 1261, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":979},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1262,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.341892242432ms
Sending response {"id": 1262, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":43},"end":{"line":24,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.338077545166ms
Sending response {"id": 1263, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.325202941895ms
Sending response {"id": 1264, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":979},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":979}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1265,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.277042388916ms
Sending response {"id": 1265, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1266,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":49}}}
[server] Got a method textDocument/hover
[server] processing took 1.6131401062ms
Sending response {"id": 1266, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1267,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.42200088501ms
Sending response {"id": 1267, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1268,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04403495789ms
Sending response {"id": 1268, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1269,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.735998153687ms
Sending response {"id": 1269, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1270,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 1.22499465942ms
Sending response {"id": 1270, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":980},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> SString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1271,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04808807373ms
Sending response {"id": 1271, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1272,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":28},"end":{"line":23,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.669956207275ms
Sending response {"id": 1272, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1273,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.3821849823ms
Sending response {"id": 1273, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":982},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> SriString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1274,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.359058380127ms
Sending response {"id": 1274, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":30},"end":{"line":23,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.229835510254ms
Sending response {"id": 1275, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1276,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.25496292114ms
Sending response {"id": 1276, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":984},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> SString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":989},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> StringString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1277,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.375986099243ms
Sending response {"id": 1277, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":33},"end":{"line":23,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.248908996582ms
Sending response {"id": 1278, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1279,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.34897232056ms
Sending response {"id": 1279, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":990},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1280,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":34},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.292062759399ms
Sending response {"id": 1280, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":993},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.triString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":994},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trimString.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":995},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trim String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1281,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.425100326538ms
Sending response {"id": 1281, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":39},"end":{"line":23,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.28395652771ms
Sending response {"id": 1282, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1283,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.257015228271ms
Sending response {"id": 1283, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":996},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trim |String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1284,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.32791900635ms
Sending response {"id": 1284, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":40},"end":{"line":23,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.715970993042ms
Sending response {"id": 1285, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":997},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trim |>String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":998},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trim |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1286,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.287055969238ms
Sending response {"id": 1286, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1287,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":42},"end":{"line":23,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.359058380127ms
Sending response {"id": 1287, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1288,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.37407875061ms
Sending response {"id": 1288, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":998},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.trim |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":998}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1289,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.822067260742ms
Sending response {"id": 1289, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1290,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.52809715271ms
Sending response {"id": 1290, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1291,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.312089920044ms
Sending response {"id": 1291, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1292,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.5851726532ms
Sending response {"id": 1292, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1293,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.365972518921ms
Sending response {"id": 1293, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1294,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.334024429321ms
Sending response {"id": 1294, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1295,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.282049179077ms
Sending response {"id": 1295, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":999},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    string_of_int (n_ti_element 2020 input)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1296,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.319004058838ms
Sending response {"id": 1296, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.240087509155ms
Sending response {"id": 1297, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1298,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.259160995483ms
Sending response {"id": 1298, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1299,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.693082809448ms
Sending response {"id": 1299, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1300,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 1.8310546875ms
Sending response {"id": 1300, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1301,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":37}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 3.28707695007ms
Sending response {"id": 1301, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":37},"end":{"line":24,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.466108322144ms
Sending response {"id": 1302, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1303,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":63}}}
[server] Got a method textDocument/hover
[server] processing took 0.461101531982ms
Sending response {"id": 1303, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1304,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":64}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.12104415894ms
Sending response {"id": 1304, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1305,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":64},"end":{"line":23,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.447988510132ms
Sending response {"id": 1305, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1306,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":55}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 2.43401527405ms
Sending response {"id": 1306, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1307,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":55},"end":{"line":23,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.33585929871ms
Sending response {"id": 1307, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.648975372314ms
Sending response {"id": 1308, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1309,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.393867492676ms
Sending response {"id": 1309, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1310,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":55},"end":{"line":23,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.521183013916ms
Sending response {"id": 1310, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1311,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.05500221252ms
Sending response {"id": 1311, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1312,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.483989715576ms
Sending response {"id": 1312, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1313,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":42},"end":{"line":24,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.18494033813ms
Sending response {"id": 1313, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1314,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 1.08098983765ms
Sending response {"id": 1314, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1315,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.66614151001ms
Sending response {"id": 1315, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 1.01280212402ms
Sending response {"id": 1316, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1000},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1317,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.253915786743ms
Sending response {"id": 1317, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1001},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1004},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1005},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.31304359436ms
Sending response {"id": 1318, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1319,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.62801551819ms
Sending response {"id": 1319, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1320,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.527858734131ms
Sending response {"id": 1320, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1005},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1005}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1321,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 17.6701545715ms
Sending response {"id": 1321, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1322,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.391006469727ms
Sending response {"id": 1322, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1323,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.931978225708ms
Sending response {"id": 1323, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1324,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.778198242188ms
Sending response {"id": 1324, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.566005706787ms
Sending response {"id": 1325, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1326,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.881910324097ms
Sending response {"id": 1326, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1006},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    l\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1327,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.394821166992ms
Sending response {"id": 1327, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1007},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    le\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1009},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1328,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 4.52589988708ms
Sending response {"id": 1328, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1329,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.12104415894ms
Sending response {"id": 1329, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1010},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let o\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1330,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.36883354187ms
Sending response {"id": 1330, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1011},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let og\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1331,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.22904777527ms
Sending response {"id": 1331, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":10},"end":{"line":24,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.509977340698ms
Sending response {"id": 1332, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1019},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1333,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.31194496155ms
Sending response {"id": 1333, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1334,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.540971755981ms
Sending response {"id": 1334, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1021},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1335,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.9850730896ms
Sending response {"id": 1335, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1336,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.07097625732ms
Sending response {"id": 1336, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1022},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1337,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.364065170288ms
Sending response {"id": 1337, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1026},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1338,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.372886657715ms
Sending response {"id": 1338, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1339,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":23},"end":{"line":24,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.426054000854ms
Sending response {"id": 1339, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1340,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.19996070862ms
Sending response {"id": 1340, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1027},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1341,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.01606750488ms
Sending response {"id": 1341, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1342,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.571012496948ms
Sending response {"id": 1342, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1028},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1343,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.757217407227ms
Sending response {"id": 1343, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":25},"end":{"line":24,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.446081161499ms
Sending response {"id": 1344, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1345,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.50895118713ms
Sending response {"id": 1345, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1030},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1346,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.34499168396ms
Sending response {"id": 1346, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1347,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.0998249054ms
Sending response {"id": 1347, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1348,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":19,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 1.2800693512ms
Sending response {"id": 1348, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1031},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1349,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":28},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.832080841064ms
Sending response {"id": 1349, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1350,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.27696990967ms
Sending response {"id": 1350, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1351,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":28},"end":{"line":24,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.773906707764ms
Sending response {"id": 1351, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1352,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.26004219055ms
Sending response {"id": 1352, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1032},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1353,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.253915786743ms
Sending response {"id": 1353, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1354,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":39},"end":{"line":24,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.2760887146ms
Sending response {"id": 1354, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1355,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.375986099243ms
Sending response {"id": 1355, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1033},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1356,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.90877914429ms
Sending response {"id": 1356, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1038},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1357,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.29208374023ms
Sending response {"id": 1357, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1358,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.32894515991ms
Sending response {"id": 1358, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1039},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1359,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.95400619507ms
Sending response {"id": 1359, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1360,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":46},"end":{"line":24,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.888824462891ms
Sending response {"id": 1360, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1040},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |>\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1041},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1361,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.62498855591ms
Sending response {"id": 1361, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.88612937927ms
Sending response {"id": 1362, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1042},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1363,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":49},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.292062759399ms
Sending response {"id": 1363, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1364,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.740051269531ms
Sending response {"id": 1364, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":49},"end":{"line":24,"character":49}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.324964523315ms
Sending response {"id": 1365, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1366,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.318050384521ms
Sending response {"id": 1366, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1043},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1367,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.360012054443ms
Sending response {"id": 1367, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1368,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.25901603699ms
Sending response {"id": 1368, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1044},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> s\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1369,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":49},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.249862670898ms
Sending response {"id": 1369, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1048},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> strin\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1370,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.602960586548ms
Sending response {"id": 1370, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":53},"end":{"line":24,"character":53}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.257015228271ms
Sending response {"id": 1371, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1372,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.417947769165ms
Sending response {"id": 1372, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1049},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1373,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.28395652771ms
Sending response {"id": 1373, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":54},"end":{"line":24,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.265836715698ms
Sending response {"id": 1374, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1050},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1375,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.444889068604ms
Sending response {"id": 1375, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":55},"end":{"line":24,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.370025634766ms
Sending response {"id": 1376, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1376}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1051},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_o\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1377,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":56},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.917911529541ms
Sending response {"id": 1377, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1052},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1378,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":57},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.274896621704ms
Sending response {"id": 1378, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1379,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.617027282715ms
Sending response {"id": 1379, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":57},"end":{"line":24,"character":57}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.279903411865ms
Sending response {"id": 1380, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1053},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1381,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":58},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.241994857788ms
Sending response {"id": 1381, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1382,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.42200088501ms
Sending response {"id": 1382, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1383,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":58},"end":{"line":24,"character":58}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.47492980957ms
Sending response {"id": 1383, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1054},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1384,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":59},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.329971313477ms
Sending response {"id": 1384, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1055},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1385,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":60},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.266075134277ms
Sending response {"id": 1385, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1056},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1386,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.77209281921ms
Sending response {"id": 1386, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":61},"end":{"line":24,"character":61}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.12104415894ms
Sending response {"id": 1387, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1388,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.590085983276ms
Sending response {"id": 1388, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1057},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1389,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.607967376709ms
Sending response {"id": 1389, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1390,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.60002708435ms
Sending response {"id": 1390, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1058},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1391,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":63},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.401020050049ms
Sending response {"id": 1391, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1059},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1061},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1392,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.672101974487ms
Sending response {"id": 1392, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1393,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.4111995697ms
Sending response {"id": 1393, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1062},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    o\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1394,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":25,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 2.58898735046ms
Sending response {"id": 1394, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1395,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.349998474121ms
Sending response {"id": 1395, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1396,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.250101089478ms
Sending response {"id": 1396, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1397,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.34086608887ms
Sending response {"id": 1397, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1069},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1398,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.938892364502ms
Sending response {"id": 1398, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1399,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.313997268677ms
Sending response {"id": 1399, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1069},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1069}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1400,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.6667842865ms
Sending response {"id": 1400, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1401,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":64}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.237941741943ms
Sending response {"id": 1401, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1402,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.931978225708ms
Sending response {"id": 1402, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":64},"end":{"line":23,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.334978103638ms
Sending response {"id": 1403, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1404,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":66}}}
[server] Got a method textDocument/hover
[server] processing took 1.25312805176ms
Sending response {"id": 1404, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1070},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1405,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":65}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 1.9199848175ms
Sending response {"id": 1405, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1406,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.18112564087ms
Sending response {"id": 1406, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1407,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":65},"end":{"line":23,"character":65}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.402927398682ms
Sending response {"id": 1407, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1408,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.41501426697ms
Sending response {"id": 1408, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1409,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":77}}}
[server] Got a method textDocument/hover
[server] processing took 1.26194953918ms
Sending response {"id": 1409, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1410,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":78}}}
[server] Got a method textDocument/hover
[server] processing took 2.55012512207ms
Sending response {"id": 1410, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1411,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":78}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.865936279297ms
Sending response {"id": 1411, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1412,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":78},"end":{"line":23,"character":78}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.403165817261ms
Sending response {"id": 1412, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1071},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1413,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.293970108032ms
Sending response {"id": 1413, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1414,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":79},"end":{"line":23,"character":79}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.293016433716ms
Sending response {"id": 1414, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1415,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.67012214661ms
Sending response {"id": 1415, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1071},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    let odgovor = input |> n_ti_element 2020 |> string_of_int in \n    odgovor \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1071}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1416,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.289916992188ms
Sending response {"id": 1416, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1417,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":33,"character":50}}}
[server] Got a method textDocument/hover
[server] processing took 1.52587890625ms
Sending response {"id": 1417, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1418,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":63}}}
[server] Got a method textDocument/hover
[server] processing took 0.785827636719ms
Sending response {"id": 1418, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1419,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":65}}}
[server] Got a method textDocument/hover
[server] processing took 0.943899154663ms
Sending response {"id": 1419, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1420,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.332832336426ms
Sending response {"id": 1420, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1421,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":25,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.44481658936ms
Sending response {"id": 1421, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1422,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 1.56307220459ms
Sending response {"id": 1422, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1072},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1423,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.478029251099ms
Sending response {"id": 1423, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1076},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1424,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.627994537354ms
Sending response {"id": 1424, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1425,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.247001647949ms
Sending response {"id": 1425, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1426,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.36590003967ms
Sending response {"id": 1426, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1077},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1427,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.05309486389ms
Sending response {"id": 1427, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1428,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.584125518799ms
Sending response {"id": 1428, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1077},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1077}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1429,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.97696685791ms
Sending response {"id": 1429, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1430,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.55186653137ms
Sending response {"id": 1430, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1431,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.354051589966ms
Sending response {"id": 1431, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1432,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.774145126343ms
Sending response {"id": 1432, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1433,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.597953796387ms
Sending response {"id": 1433, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1434,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":36,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 3.45206260681ms
Sending response {"id": 1434, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1435,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.410079956055ms
Sending response {"id": 1435, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1436,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 1.2059211731ms
Sending response {"id": 1436, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1437,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 2.09403038025ms
Sending response {"id": 1437, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1438,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 1.52993202209ms
Sending response {"id": 1438, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1439,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 1.55687332153ms
Sending response {"id": 1439, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1440,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.358819961548ms
Sending response {"id": 1440, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1078},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    inpu\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1080},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1082},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1441,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.653982162476ms
Sending response {"id": 1441, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1442,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.47294998169ms
Sending response {"id": 1442, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1083},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1443,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.386953353882ms
Sending response {"id": 1443, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1444,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.04093551636ms
Sending response {"id": 1444, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1445,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.963926315308ms
Sending response {"id": 1445, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1446,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.570058822632ms
Sending response {"id": 1446, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1084},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1447,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.27696990967ms
Sending response {"id": 1447, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1448,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":6},"end":{"line":24,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.00111961365ms
Sending response {"id": 1448, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1449,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.380039215088ms
Sending response {"id": 1449, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1085},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1450,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.12199783325ms
Sending response {"id": 1450, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1451,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04713439941ms
Sending response {"id": 1451, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1086},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1452,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.90005111694ms
Sending response {"id": 1452, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1453,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.893831253052ms
Sending response {"id": 1453, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1091},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1454,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.757932662964ms
Sending response {"id": 1454, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1455,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.26910209656ms
Sending response {"id": 1455, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1092},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1456,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.369071960449ms
Sending response {"id": 1456, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1093},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1457,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.988960266113ms
Sending response {"id": 1457, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1458,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":24},"end":{"line":24,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.06310844421ms
Sending response {"id": 1458, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1459,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.53088569641ms
Sending response {"id": 1459, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1094},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 inp\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1096},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1460,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.65200233459ms
Sending response {"id": 1460, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1461,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.793933868408ms
Sending response {"id": 1461, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1462,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.641107559204ms
Sending response {"id": 1462, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1097},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1463,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.43694877625ms
Sending response {"id": 1463, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1464,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.40905380249ms
Sending response {"id": 1464, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1097},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1097}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1465,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.408887863159ms
Sending response {"id": 1465, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1466,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.952005386353ms
Sending response {"id": 1466, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1467,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 1.99389457703ms
Sending response {"id": 1467, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1468,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 3.73911857605ms
Sending response {"id": 1468, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1469,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.442028045654ms
Sending response {"id": 1469, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1470,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.443935394287ms
Sending response {"id": 1470, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1471,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.298023223877ms
Sending response {"id": 1471, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1472,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":20}}}
[server] Got a method textDocument/hover
[server] processing took 5.2649974823ms
Sending response {"id": 1472, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1473,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.351905822754ms
Sending response {"id": 1473, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1099},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_stri chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1100},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_str chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1101},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_st chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1102},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_s chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1474,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.442981719971ms
Sending response {"id": 1474, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.270128250122ms
Sending response {"id": 1475, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1103},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_ chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1476,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.42702865601ms
Sending response {"id": 1476, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.701904296875ms
Sending response {"id": 1477, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1478,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.13892555237ms
Sending response {"id": 1478, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1104},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_i chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1479,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.380039215088ms
Sending response {"id": 1479, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1105},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_in chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1480,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.313997268677ms
Sending response {"id": 1480, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1106},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_int chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1481,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.497102737427ms
Sending response {"id": 1481, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1482,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.04794311523ms
Sending response {"id": 1482, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1483,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.0449886322ms
Sending response {"id": 1483, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1484,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.827074050903ms
Sending response {"id": 1484, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1106},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_int chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1106}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1485,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.67403030396ms
Sending response {"id": 1485, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1486,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":38,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 1.06596946716ms
Sending response {"id": 1486, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1487,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.572919845581ms
Sending response {"id": 1487, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1488,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":38,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 1.01804733276ms
Sending response {"id": 1488, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1109},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_ chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1489,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.78296661377ms
Sending response {"id": 1489, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1490,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.353813171387ms
Sending response {"id": 1490, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1491,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.03306770325ms
Sending response {"id": 1491, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1110},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_b chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1492,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.491857528687ms
Sending response {"id": 1492, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1111},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_by chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1493,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.683069229126ms
Sending response {"id": 1493, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1112},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byt chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1494,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.825881958008ms
Sending response {"id": 1494, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1113},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1495,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.19805335999ms
Sending response {"id": 1495, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1496,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":19},"end":{"line":37,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.891923904419ms
Sending response {"id": 1496, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1497,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.02996826172ms
Sending response {"id": 1497, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1113},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1113}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1498,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.380039215088ms
Sending response {"id": 1498, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1499,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.475168228149ms
Sending response {"id": 1499, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1500,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 1.34587287903ms
Sending response {"id": 1500, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1501,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.526905059814ms
Sending response {"id": 1501, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1502,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.82804870605ms
Sending response {"id": 1502, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1503,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.880002975464ms
Sending response {"id": 1503, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1114},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1504,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.06398963928ms
Sending response {"id": 1504, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1505,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.33419036865ms
Sending response {"id": 1505, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1115},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1506,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.532865524292ms
Sending response {"id": 1506, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1507,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":29},"end":{"line":24,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.415802001953ms
Sending response {"id": 1507, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1117},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1508,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.9149055481ms
Sending response {"id": 1508, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1509,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.3279914856ms
Sending response {"id": 1509, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1118},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> s\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1510,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":32},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.267028808594ms
Sending response {"id": 1510, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1511,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.509977340698ms
Sending response {"id": 1511, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1512,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":32},"end":{"line":24,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.293970108032ms
Sending response {"id": 1512, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1513,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.23715400696ms
Sending response {"id": 1513, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1122},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> strin\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1514,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.540018081665ms
Sending response {"id": 1514, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1515,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":36},"end":{"line":24,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.760078430176ms
Sending response {"id": 1515, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1516,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.83606147766ms
Sending response {"id": 1516, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1123},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1517,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.668048858643ms
Sending response {"id": 1517, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1518,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":37},"end":{"line":24,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.792026519775ms
Sending response {"id": 1518, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1124},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1519,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.82700157166ms
Sending response {"id": 1519, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1520,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":38},"end":{"line":24,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.49614906311ms
Sending response {"id": 1520, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1520}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1125},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_o\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1521,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":39},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 1.12891197205ms
Sending response {"id": 1521, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1126},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_og\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1522,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.29508972168ms
Sending response {"id": 1522, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1523,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":40},"end":{"line":24,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.415086746216ms
Sending response {"id": 1523, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1128},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1524,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":40},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.408887863159ms
Sending response {"id": 1524, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1525,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.33681297302ms
Sending response {"id": 1525, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1526,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":40},"end":{"line":24,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.462055206299ms
Sending response {"id": 1526, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1527,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.518083572388ms
Sending response {"id": 1527, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1129},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1528,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":41},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.23889541626ms
Sending response {"id": 1528, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1529,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.46214866638ms
Sending response {"id": 1529, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1530,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":41},"end":{"line":24,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.949144363403ms
Sending response {"id": 1530, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1531,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.355005264282ms
Sending response {"id": 1531, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1130},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1532,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.380992889404ms
Sending response {"id": 1532, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1131},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1533,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":43},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.918865203857ms
Sending response {"id": 1533, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1132},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1534,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.26807594299ms
Sending response {"id": 1534, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1535,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":44},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04093551636ms
Sending response {"id": 1535, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1536,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.481843948364ms
Sending response {"id": 1536, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1132},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1132}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1537,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.968933105469ms
Sending response {"id": 1537, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1538,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":32,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.326871871948ms
Sending response {"id": 1538, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1539,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":32,"character":35}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.32901763916ms
Sending response {"id": 1539, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1540,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.365018844604ms
Sending response {"id": 1540, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1541,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":32,"character":35},"end":{"line":32,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.264883041382ms
Sending response {"id": 1541, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1542,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":32,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 1.55520439148ms
Sending response {"id": 1542, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1543,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":32,"character":41},"end":{"line":32,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.403881072998ms
Sending response {"id": 1543, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1134},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_stri chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1135},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_str chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1544,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.324010848999ms
Sending response {"id": 1544, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1545,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":32,"character":38},"end":{"line":32,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.2601146698ms
Sending response {"id": 1545, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1546,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.33712387085ms
Sending response {"id": 1546, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1136},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_stri chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1547,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":32,"character":39},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.306129455566ms
Sending response {"id": 1547, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1137},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_strin chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1548,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":32,"character":40},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.233173370361ms
Sending response {"id": 1548, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1138},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_byte chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1549,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.46706199646ms
Sending response {"id": 1549, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1550,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":32,"character":41},"end":{"line":32,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.234127044678ms
Sending response {"id": 1550, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1551,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.293970108032ms
Sending response {"id": 1551, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1552,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.297069549561ms
Sending response {"id": 1552, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1553,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":36,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.496864318848ms
Sending response {"id": 1553, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1554,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":36,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.331878662109ms
Sending response {"id": 1554, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1555,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":36,"character":26},"end":{"line":36,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.2601146698ms
Sending response {"id": 1555, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1556,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.345945358276ms
Sending response {"id": 1556, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1557,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.370025634766ms
Sending response {"id": 1557, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1558,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.340938568115ms
Sending response {"id": 1558, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1559,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.358104705811ms
Sending response {"id": 1559, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1560,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":19},"end":{"line":37,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.326156616211ms
Sending response {"id": 1560, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1143},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_s chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1561,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.345945358276ms
Sending response {"id": 1561, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1144},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_st chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1562,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.274896621704ms
Sending response {"id": 1562, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1145},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_str chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1563,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.261068344116ms
Sending response {"id": 1563, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1146},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_stri chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1564,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.283002853394ms
Sending response {"id": 1564, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1147},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_strin chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1565,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.28395652771ms
Sending response {"id": 1565, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1148},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1566,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":21},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.312089920044ms
Sending response {"id": 1566, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1567,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.543832778931ms
Sending response {"id": 1567, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1568,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.237941741943ms
Sending response {"id": 1568, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1569,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.74291229248ms
Sending response {"id": 1569, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1148},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input |> string_of_int\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1148}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1570,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.296831130981ms
Sending response {"id": 1570, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1571,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":37,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.537872314453ms
Sending response {"id": 1571, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1572,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.710010528564ms
Sending response {"id": 1572, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1573,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":52},"end":{"line":23,"character":52}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.243186950684ms
Sending response {"id": 1573, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1574,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":53}}}
[server] Got a method textDocument/hover
[server] processing took 0.36096572876ms
Sending response {"id": 1574, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1575,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":44}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.354051589966ms
Sending response {"id": 1575, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1576,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":44},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.422954559326ms
Sending response {"id": 1576, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1577,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.31304359436ms
Sending response {"id": 1577, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1578,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.274896621704ms
Sending response {"id": 1578, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml","languageId":"ocaml","version":1,"text":"let remove_x list = \n    let rec aux acc = function\n        |[] ->acc\n        |x::xs -> if x = \"x\" then aux acc xs else aux (x::acc) xs\n    in\n    aux [] list\n\nlet nasl_od_mojega moj_cas st_busa = \n    let rec aux moj bus stevec = \n        if stevec < moj then aux moj bus (stevec+bus) else stevec \n    in\n    (aux moj_cas st_busa 0, st_busa)\n\nlet min_of_list list = \n    let rec aux (acc, bus) = function\n        |[] -> acc, bus\n        |(x, y)::xs -> if x < acc then aux (x, y) xs else aux (acc, bus) xs\n    in \n    aux (List.hd list) list\n\nlet naloga1 vsebina = \n    let input_list = vsebina |> String.split_on_char '\\n'in\n    let head = int_of_string (List.hd input_list) in \n    let avtobusi = input_list |> List.tl |> List.hd |> String.split_on_char ',' |> remove_x |> List.map int_of_string in \n    let moji_odhodi = List.map (nasl_od_mojega head) avtobusi |> min_of_list in \n    string_of_int((fst moji_odhodi - head)*(snd moji_odhodi))\n\n\n\nlet test = \"7,13,x,x,59,x,31,19\"\n\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_13/day_13.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_13/day_13_1.out\" odgovor1;"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1579,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.274896621704ms
Sending response {"id": 1579, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1580,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.701904296875ms
Sending response {"id": 1580, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1581,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.485897064209ms
Sending response {"id": 1581, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1582,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 4.24814224243ms
Sending response {"id": 1582, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1583,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 4.47487831116ms
Sending response {"id": 1583, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1584,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":44},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.761032104492ms
Sending response {"id": 1584, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1585,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.409126281738ms
Sending response {"id": 1585, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1586,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 10.0929737091ms
Sending response {"id": 1586, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1587,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.993013381958ms
Sending response {"id": 1587, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1588,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.607967376709ms
Sending response {"id": 1588, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_13/day_13.ml"}}}
Read message 
{"jsonrpc":"2.0","id":1589,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 4.75907325745ms
Sending response {"id": 1589, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1590,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.510931015015ms
Sending response {"id": 1590, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1591,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.346899032593ms
Sending response {"id": 1591, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1592,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":44},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.311136245728ms
Sending response {"id": 1592, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1593,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":41,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 1.50489807129ms
Sending response {"id": 1593, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1594,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.76303291321ms
Sending response {"id": 1594, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1595,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.96115875244ms
Sending response {"id": 1595, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1596,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":44},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.441074371338ms
Sending response {"id": 1596, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1597,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.411987304688ms
Sending response {"id": 1597, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1598,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":43}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.02114677429ms
Sending response {"id": 1598, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1599,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.361204147339ms
Sending response {"id": 1599, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1149},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    i\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1600,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.344038009644ms
Sending response {"id": 1600, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1150},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    in\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1153},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1601,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.854015350342ms
Sending response {"id": 1601, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1602,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":9},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.652074813843ms
Sending response {"id": 1602, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1603,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.870943069458ms
Sending response {"id": 1603, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1154},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1604,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.478029251099ms
Sending response {"id": 1604, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1605,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.64103507996ms
Sending response {"id": 1605, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1154},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1154}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1606,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.454902648926ms
Sending response {"id": 1606, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1607,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 1.36399269104ms
Sending response {"id": 1607, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1608,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":11,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 0.41389465332ms
Sending response {"id": 1608, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1609,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.874996185303ms
Sending response {"id": 1609, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1156},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1157},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  ()\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1610,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":12}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.453948974609ms
Sending response {"id": 1610, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1611,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.757932662964ms
Sending response {"id": 1611, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1612,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":12},"end":{"line":24,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.702142715454ms
Sending response {"id": 1612, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1158},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1613,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0290145874ms
Sending response {"id": 1613, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1614,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":13},"end":{"line":24,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.646114349365ms
Sending response {"id": 1614, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1615,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.26798248291ms
Sending response {"id": 1615, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1159},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (** *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1616,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.447988510132ms
Sending response {"id": 1616, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1617,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":14},"end":{"line":24,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.211954116821ms
Sending response {"id": 1617, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1618,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.489950180054ms
Sending response {"id": 1618, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1160},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (* *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1170},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi na *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1175},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako  *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1619,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.861883163452ms
Sending response {"id": 1619, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1620,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.636100769043ms
Sending response {"id": 1620, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1176},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako i *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1621,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.316143035889ms
Sending response {"id": 1621, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1622,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":29},"end":{"line":24,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.236034393311ms
Sending response {"id": 1622, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1177},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako in *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1623,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.526905059814ms
Sending response {"id": 1623, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1624,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":30},"end":{"line":24,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.524997711182ms
Sending response {"id": 1624, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1625,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.278949737549ms
Sending response {"id": 1625, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1178},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1626,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.288963317871ms
Sending response {"id": 1626, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1627,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":31},"end":{"line":24,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.200033187866ms
Sending response {"id": 1627, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1179},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_ *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1181},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1628,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.925064086914ms
Sending response {"id": 1628, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1629,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":34},"end":{"line":24,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.603914260864ms
Sending response {"id": 1629, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1182},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_ *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1630,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.0449886322ms
Sending response {"id": 1630, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1631,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":35},"end":{"line":24,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.529050827026ms
Sending response {"id": 1631, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1632,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.07908248901ms
Sending response {"id": 1632, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1183},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_s *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1188},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1633,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.688076019287ms
Sending response {"id": 1633, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1634,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":41},"end":{"line":24,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.393867492676ms
Sending response {"id": 1634, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1189},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string  *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1195},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če  *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1635,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.40380859375ms
Sending response {"id": 1635, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1210},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v ko *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1636,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.47001647949ms
Sending response {"id": 1636, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1637,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":63},"end":{"line":24,"character":63}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.866889953613ms
Sending response {"id": 1637, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1211},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v kon *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1224},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela  *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1638,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.504016876221ms
Sending response {"id": 1638, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1639,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.00612640381ms
Sending response {"id": 1639, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1225},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela *)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1640,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.01399421692ms
Sending response {"id": 1640, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1641,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":76},"end":{"line":24,"character":76}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.454187393188ms
Sending response {"id": 1641, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1642,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.795841217041ms
Sending response {"id": 1642, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1643,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":77},"end":{"line":24,"character":77}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04403495789ms
Sending response {"id": 1643, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1226},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1644,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.327110290527ms
Sending response {"id": 1644, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1645,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":76},"end":{"line":24,"character":76}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.176191329956ms
Sending response {"id": 1645, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1646,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.06406211853ms
Sending response {"id": 1646, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1647,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 1.10101699829ms
Sending response {"id": 1647, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1648,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.507116317749ms
Sending response {"id": 1648, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1649,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":29},"end":{"line":24,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.519037246704ms
Sending response {"id": 1649, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1650,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":22,"character":0},"end":{"line":24,"character":78}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.442981719971ms
Sending response {"id": 1650, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1651,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":16}}}
[server] Got a method textDocument/definition
[server] processing took 0.569105148315ms
Sending response {"id": 1651, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1652,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":60}}}
[server] Got a method textDocument/definition
[server] processing took 0.826120376587ms
Sending response {"id": 1652, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1653,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":73}}}
[server] Got a method textDocument/definition
[server] processing took 1.13701820374ms
Sending response {"id": 1653, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1654,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":23,"character":82}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.407934188843ms
Sending response {"id": 1654, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1655,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":23,"character":82},"end":{"line":23,"character":82}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.362157821655ms
Sending response {"id": 1655, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1656,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":78},"end":{"line":24,"character":78}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.417947769165ms
Sending response {"id": 1656, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1227},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1228},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n  \n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1657,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.02806091309ms
Sending response {"id": 1657, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1658,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.39491462708ms
Sending response {"id": 1658, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1229},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1659,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.2309551239ms
Sending response {"id": 1659, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1230},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1660,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.99413299561ms
Sending response {"id": 1660, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1231},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\n\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1232},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1661,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.05023384094ms
Sending response {"id": 1661, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1662,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":78},"end":{"line":29,"character":78}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.281810760498ms
Sending response {"id": 1662, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1663,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.901937484741ms
Sending response {"id": 1663, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1664,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":27,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.26600265503ms
Sending response {"id": 1664, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1665,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.447988510132ms
Sending response {"id": 1665, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1666,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":28,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 1.26504898071ms
Sending response {"id": 1666, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1234},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1667,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":27,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.304937362671ms
Sending response {"id": 1667, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1668,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.771999359131ms
Sending response {"id": 1668, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1669,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.651121139526ms
Sending response {"id": 1669, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1670,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.35898590088ms
Sending response {"id": 1670, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1671,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":28,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.369071960449ms
Sending response {"id": 1671, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1672,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":54}}}
[server] Got a method textDocument/hover
[server] processing took 1.30200386047ms
Sending response {"id": 1672, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1673,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":54}}}
[server] Got a method textDocument/hover
[server] processing took 0.807046890259ms
Sending response {"id": 1673, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1674,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.560998916626ms
Sending response {"id": 1674, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1675,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.4660358429ms
Sending response {"id": 1675, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1676,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":8},"end":{"line":24,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.330924987793ms
Sending response {"id": 1676, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1677,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.68204307556ms
Sending response {"id": 1677, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1678,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.36096572876ms
Sending response {"id": 1678, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1679,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 1.30391120911ms
Sending response {"id": 1679, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1235},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1680,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.272035598755ms
Sending response {"id": 1680, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1681,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.56004524231ms
Sending response {"id": 1681, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1682,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":5},"end":{"line":24,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.92601776123ms
Sending response {"id": 1682, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1683,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.385999679565ms
Sending response {"id": 1683, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1236},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1684,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.512838363647ms
Sending response {"id": 1684, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1685,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":6},"end":{"line":24,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.65390968323ms
Sending response {"id": 1685, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1238},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1686,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.15585327148ms
Sending response {"id": 1686, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1687,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":8},"end":{"line":24,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.443935394287ms
Sending response {"id": 1687, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1688,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.62108039856ms
Sending response {"id": 1688, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1239},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1689,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.914096832275ms
Sending response {"id": 1689, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1690,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.649929046631ms
Sending response {"id": 1690, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1240},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element   (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1691,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.49004364014ms
Sending response {"id": 1691, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1692,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.641107559204ms
Sending response {"id": 1692, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1244},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1245},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020   (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1693,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.51491165161ms
Sending response {"id": 1693, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1694,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.74379348755ms
Sending response {"id": 1694, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1246},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 i  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1695,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":23},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.447988510132ms
Sending response {"id": 1695, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1247},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 in  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1248},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 inp  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1696,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.55489349365ms
Sending response {"id": 1696, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1697,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":25},"end":{"line":24,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.416040420532ms
Sending response {"id": 1697, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1698,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.04205513ms
Sending response {"id": 1698, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1249},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1699,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.560998916626ms
Sending response {"id": 1699, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1700,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":27},"end":{"line":24,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.341892242432ms
Sending response {"id": 1700, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1701,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.42812728882ms
Sending response {"id": 1701, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1702,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.635862350464ms
Sending response {"id": 1702, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1703,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 7.38310813904ms
Sending response {"id": 1703, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1704,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.1739730835ms
Sending response {"id": 1704, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1705,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.298023223877ms
Sending response {"id": 1705, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1706,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.286102294922ms
Sending response {"id": 1706, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1250},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1707,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.230073928833ms
Sending response {"id": 1707, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1708,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.384092330933ms
Sending response {"id": 1708, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1709,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":5},"end":{"line":29,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.281810760498ms
Sending response {"id": 1709, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1710,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.10292434692ms
Sending response {"id": 1710, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1251},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n-  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1711,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.495910644531ms
Sending response {"id": 1711, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1712,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":6},"end":{"line":29,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.382900238037ms
Sending response {"id": 1712, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1252},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1253},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1713,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":6},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.29993057251ms
Sending response {"id": 1713, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1714,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.336885452271ms
Sending response {"id": 1714, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1715,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":6},"end":{"line":29,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.280857086182ms
Sending response {"id": 1715, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1716,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.52897834778ms
Sending response {"id": 1716, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1254},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1717,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.586032867432ms
Sending response {"id": 1717, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1718,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":16},"end":{"line":29,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.13296508789ms
Sending response {"id": 1718, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1719,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.766038894653ms
Sending response {"id": 1719, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1255},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element   (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1720,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.40190124512ms
Sending response {"id": 1720, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1721,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.466108322144ms
Sending response {"id": 1721, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1256},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 3  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1722,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.06406211853ms
Sending response {"id": 1722, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1723,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.527858734131ms
Sending response {"id": 1723, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1724,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.381946563721ms
Sending response {"id": 1724, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1258},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 300  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1725,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.36804580688ms
Sending response {"id": 1725, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1726,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":20},"end":{"line":29,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.431060791016ms
Sending response {"id": 1726, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1260},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 30000  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1262},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 3000000  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1263},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 30000000  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1727,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.21879577637ms
Sending response {"id": 1727, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1728,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.339031219482ms
Sending response {"id": 1728, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1729,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.85704231262ms
Sending response {"id": 1729, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1264},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 30000000   (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1730,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.43797492981ms
Sending response {"id": 1730, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1731,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.401973724365ms
Sending response {"id": 1731, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1265},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 30000000 i  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1732,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.294923782349ms
Sending response {"id": 1732, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1270},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1733,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":31},"end":{"line":29,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.04403495789ms
Sending response {"id": 1733, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1734,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.91521644592ms
Sending response {"id": 1734, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1735,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.14703178406ms
Sending response {"id": 1735, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1736,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.959873199463ms
Sending response {"id": 1736, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1737,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.40690803528ms
Sending response {"id": 1737, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1738,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.416994094849ms
Sending response {"id": 1738, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1276},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    stringn_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1739,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.03902816772ms
Sending response {"id": 1739, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1740,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.58913230896ms
Sending response {"id": 1740, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1741,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.05905532837ms
Sending response {"id": 1741, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1277},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_n_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1742,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.91187858582ms
Sending response {"id": 1742, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1743,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 2.38299369812ms
Sending response {"id": 1743, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1278},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_on_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1279},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_ofn_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1744,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.240087509155ms
Sending response {"id": 1744, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1745,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.242948532104ms
Sending response {"id": 1745, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1746,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.639915466309ms
Sending response {"id": 1746, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1280},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_n_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1747,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.11413002014ms
Sending response {"id": 1747, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1748,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.458955764771ms
Sending response {"id": 1748, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1284},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int n_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1749,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.346183776855ms
Sending response {"id": 1749, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1750,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.293016433716ms
Sending response {"id": 1750, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1751,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.277996063232ms
Sending response {"id": 1751, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1285},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1752,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":19}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.446081161499ms
Sending response {"id": 1752, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1753,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.19886207581ms
Sending response {"id": 1753, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1754,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.620126724243ms
Sending response {"id": 1754, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1755,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.26600265503ms
Sending response {"id": 1755, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1756,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 0.622987747192ms
Sending response {"id": 1756, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1757,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":29,"character":46}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.549793243408ms
Sending response {"id": 1757, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1758,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":46},"end":{"line":29,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.29508972168ms
Sending response {"id": 1758, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1286},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1759,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.910997390747ms
Sending response {"id": 1759, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1760,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":29,"character":47},"end":{"line":29,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.433921813965ms
Sending response {"id": 1760, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1761,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.649213790894ms
Sending response {"id": 1761, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1762,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 2.95495986938ms
Sending response {"id": 1762, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1763,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.732898712158ms
Sending response {"id": 1763, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1764,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.08814239502ms
Sending response {"id": 1764, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1287},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    sn_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1292},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    stringn_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1765,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.618934631348ms
Sending response {"id": 1765, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1766,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":10},"end":{"line":24,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.721216201782ms
Sending response {"id": 1766, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1767,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.903844833374ms
Sending response {"id": 1767, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1293},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1768,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.478029251099ms
Sending response {"id": 1768, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1769,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":11},"end":{"line":24,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.244140625ms
Sending response {"id": 1769, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1295},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_ofn_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1770,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.06883049011ms
Sending response {"id": 1770, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1771,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":13},"end":{"line":24,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.447034835815ms
Sending response {"id": 1771, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1300},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1301},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1772,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":19}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 1.30987167358ms
Sending response {"id": 1772, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1773,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.956058502197ms
Sending response {"id": 1773, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1774,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":19},"end":{"line":24,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.05214118958ms
Sending response {"id": 1774, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1775,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.752210617065ms
Sending response {"id": 1775, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1776,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 1.42407417297ms
Sending response {"id": 1776, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1777,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.960111618042ms
Sending response {"id": 1777, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1778,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":42},"end":{"line":24,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.503063201904ms
Sending response {"id": 1778, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1779,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42}}}
[server] Got a method textDocument/hover
[server] processing took 1.2309551239ms
Sending response {"id": 1779, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1780,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.04420089722ms
Sending response {"id": 1780, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1781,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":24,"character":42}}}
[server] Got a method textDocument/hover
[server] processing took 2.48408317566ms
Sending response {"id": 1781, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1302},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1782,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.686883926392ms
Sending response {"id": 1782, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1783,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":24,"character":43},"end":{"line":24,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.54407119751ms
Sending response {"id": 1783, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1784,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.37186050415ms
Sending response {"id": 1784, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1785,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":28,"character":42}}}
[server] Got a method textDocument/hover
[server] processing took 1.48487091064ms
Sending response {"id": 1785, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1786,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":28,"character":43}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.24096870422ms
Sending response {"id": 1786, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1787,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":28,"character":43},"end":{"line":28,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 3.02600860596ms
Sending response {"id": 1787, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1788,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 3.04698944092ms
Sending response {"id": 1788, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1789,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.445127487183ms
Sending response {"id": 1789, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1790,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":62}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.459909439087ms
Sending response {"id": 1790, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1791,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":62}}}
[server] Got a method textDocument/hover
[server] processing took 0.432968139648ms
Sending response {"id": 1791, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1792,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":45,"character":65}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.306844711304ms
Sending response {"id": 1792, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1793,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":45,"character":65},"end":{"line":45,"character":65}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.34706497192ms
Sending response {"id": 1793, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1303},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke i\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1794,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":46,"character":45},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.232934951782ms
Sending response {"id": 1794, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1305},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1795,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":46,"character":46},"end":{"line":46,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.332117080688ms
Sending response {"id": 1795, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1796,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.0620098114ms
Sending response {"id": 1796, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1306},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1797,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.62403488159ms
Sending response {"id": 1797, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1798,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.271081924438ms
Sending response {"id": 1798, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1307},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    l\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1799,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":47,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.442981719971ms
Sending response {"id": 1799, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1310},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1800,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.05898284912ms
Sending response {"id": 1800, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1801,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.911951065063ms
Sending response {"id": 1801, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1311},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let o\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1802,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":47,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.888824462891ms
Sending response {"id": 1802, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1312},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let od\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1803,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.517845153809ms
Sending response {"id": 1803, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1804,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.438928604126ms
Sending response {"id": 1804, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1805,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.70595741272ms
Sending response {"id": 1805, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1317},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1806,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.901222229004ms
Sending response {"id": 1806, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1807,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.988960266113ms
Sending response {"id": 1807, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1808,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.293016433716ms
Sending response {"id": 1808, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1318},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1319},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1809,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.31099128723ms
Sending response {"id": 1809, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1810,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.526905059814ms
Sending response {"id": 1810, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1322},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = n\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1811,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":47,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.272989273071ms
Sending response {"id": 1811, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1326},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = nalog\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1327},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1328},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1812,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.357866287231ms
Sending response {"id": 1812, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1813,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":47,"character":26},"end":{"line":47,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.311136245728ms
Sending response {"id": 1813, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1814,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.48105621338ms
Sending response {"id": 1814, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1329},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 \n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1815,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.38998031616ms
Sending response {"id": 1815, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1816,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.22117996216ms
Sending response {"id": 1816, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1330},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 v\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1817,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":47,"character":28},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.253915786743ms
Sending response {"id": 1817, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1332},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vse\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1818,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.60210037231ms
Sending response {"id": 1818, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1819,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":47,"character":30},"end":{"line":47,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.735998153687ms
Sending response {"id": 1819, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1820,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.502109527588ms
Sending response {"id": 1820, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1333},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;"}]}}
Read message 
{"jsonrpc":"2.0","id":1821,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.53882598877ms
Sending response {"id": 1821, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1822,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":47,"character":43},"end":{"line":47,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.614881515503ms
Sending response {"id": 1822, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1823,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.3279914856ms
Sending response {"id": 1823, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1824,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":49,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.988960266113ms
Sending response {"id": 1824, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1825,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.690937042236ms
Sending response {"id": 1825, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1826,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":49,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 2.28214263916ms
Sending response {"id": 1826, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1827,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.380992889404ms
Sending response {"id": 1827, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1828,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":49,"character":50}}}
[server] Got a method textDocument/definition
[server] processing took 1.31893157959ms
Sending response {"id": 1828, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1829,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":49,"character":50}}}
[server] Got a method textDocument/hover
[server] processing took 0.782012939453ms
Sending response {"id": 1829, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1830,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":49,"character":51},"end":{"line":49,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 3.36909294128ms
Sending response {"id": 1830, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1334},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1335},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1"}]}}
Read message 
{"jsonrpc":"2.0","id":1831,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.229835510254ms
Sending response {"id": 1831, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1832,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":50,"character":50},"end":{"line":50,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.213861465454ms
Sending response {"id": 1832, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1833,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.66296958923ms
Sending response {"id": 1833, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1834,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.627040863037ms
Sending response {"id": 1834, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1835,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.807046890259ms
Sending response {"id": 1835, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1836,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":36}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.886917114258ms
Sending response {"id": 1836, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1837,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":50,"character":36},"end":{"line":50,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.33490562439ms
Sending response {"id": 1837, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1838,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 1.36494636536ms
Sending response {"id": 1838, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1337},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor1"}]}}
Read message 
{"jsonrpc":"2.0","id":1839,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.95512580872ms
Sending response {"id": 1839, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1840,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":50,"character":36},"end":{"line":50,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.450134277344ms
Sending response {"id": 1840, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1841,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.751972198486ms
Sending response {"id": 1841, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1842,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":50}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.632047653198ms
Sending response {"id": 1842, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1843,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":50,"character":50},"end":{"line":50,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.283002853394ms
Sending response {"id": 1843, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1339},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1844,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":50,"character":50},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.296115875244ms
Sending response {"id": 1844, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1845,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.202894210815ms
Sending response {"id": 1845, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1846,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":50,"character":50},"end":{"line":50,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.22904777527ms
Sending response {"id": 1846, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1847,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.876903533936ms
Sending response {"id": 1847, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1339},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1339}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1848,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.49090385437ms
Sending response {"id": 1848, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1849,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":12,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.984907150269ms
Sending response {"id": 1849, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1850,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.32894515991ms
Sending response {"id": 1850, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1851,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 3.89003753662ms
Sending response {"id": 1851, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1852,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.533819198608ms
Sending response {"id": 1852, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1853,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":77}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.69205665588ms
Sending response {"id": 1853, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1854,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":10,"character":77}}}
[server] Got a method textDocument/hover
[server] processing took 1.90997123718ms
Sending response {"id": 1854, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1855,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":10,"character":77},"end":{"line":10,"character":77}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.499963760376ms
Sending response {"id": 1855, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1856,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 2.65288352966ms
Sending response {"id": 1856, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1857,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.43797492981ms
Sending response {"id": 1857, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1856}}
Read message 
{"jsonrpc":"2.0","id":1858,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.23889541626ms
Sending response {"id": 1858, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1341},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1859,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.916957855225ms
Sending response {"id": 1859, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1860,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.75881385803ms
Sending response {"id": 1860, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1861,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.372886657715ms
Sending response {"id": 1861, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1862,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.257015228271ms
Sending response {"id": 1862, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1863,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.546932220459ms
Sending response {"id": 1863, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1342},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n()\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1864,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":1}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.324964523315ms
Sending response {"id": 1864, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1865,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.818967819214ms
Sending response {"id": 1865, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1866,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.684976577759ms
Sending response {"id": 1866, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1867,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.23889541626ms
Sending response {"id": 1867, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1343},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n()\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1344},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n()*\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1868,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.784873962402ms
Sending response {"id": 1868, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1869,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.998020172119ms
Sending response {"id": 1869, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1870,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.387907028198ms
Sending response {"id": 1870, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1345},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n()\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1871,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.01399421692ms
Sending response {"id": 1871, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1872,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.952005386353ms
Sending response {"id": 1872, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1873,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.308990478516ms
Sending response {"id": 1873, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1874,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.68895721436ms
Sending response {"id": 1874, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1346},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1875,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.349998474121ms
Sending response {"id": 1875, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1876,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.260829925537ms
Sending response {"id": 1876, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1877,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.624895095825ms
Sending response {"id": 1877, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1347},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(** *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1878,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.39005279541ms
Sending response {"id": 1878, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1879,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.308990478516ms
Sending response {"id": 1879, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1880,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.585079193115ms
Sending response {"id": 1880, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1348},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(* *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1881,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.87308883667ms
Sending response {"id": 1881, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1882,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.54407119751ms
Sending response {"id": 1882, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1349},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*T *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1883,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.268936157227ms
Sending response {"id": 1883, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1884,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.319004058838ms
Sending response {"id": 1884, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1885,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.17492675781ms
Sending response {"id": 1885, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1357},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI Š *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1358},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠL *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1359},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1886,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.480890274048ms
Sending response {"id": 1886, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1887,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.68998336792ms
Sending response {"id": 1887, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1360},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO. *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1888,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":14},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.31590461731ms
Sending response {"id": 1888, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1361},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO.. *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1889,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":15},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.334978103638ms
Sending response {"id": 1889, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1362},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO... *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1890,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":16},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.31590461731ms
Sending response {"id": 1890, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1363},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO.... *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1891,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":6,"character":17},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.259876251221ms
Sending response {"id": 1891, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1892,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.349044799805ms
Sending response {"id": 1892, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1893,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.357866287231ms
Sending response {"id": 1893, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1894,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.418901443481ms
Sending response {"id": 1894, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1364},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....o *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1895,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.74498558044ms
Sending response {"id": 1895, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1896,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.414848327637ms
Sending response {"id": 1896, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1365},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO.... *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1388},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešit *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1391},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvam *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1897,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.3410320282ms
Sending response {"id": 1897, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1898,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":43},"end":{"line":6,"character":43}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.303030014038ms
Sending response {"id": 1898, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1393},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami  *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1899,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.52611732483ms
Sending response {"id": 1899, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1900,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.393867492676ms
Sending response {"id": 1900, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1396},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz  *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1901,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.26600265503ms
Sending response {"id": 1901, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1902,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.17778778076ms
Sending response {"id": 1902, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1398},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz os *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1408},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih sple *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1413},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih  *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1418},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih stran *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1903,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.410079956055ms
Sending response {"id": 1903, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1904,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":70},"end":{"line":6,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.516891479492ms
Sending response {"id": 1904, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1419},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1420},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani  *)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1905,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 2.84004211426ms
Sending response {"id": 1905, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1906,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.382900238037ms
Sending response {"id": 1906, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1907,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":12,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 3.15117835999ms
Sending response {"id": 1907, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1908,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":73},"end":{"line":6,"character":73}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 1.27196311951ms
Sending response {"id": 1908, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1422},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1909,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.898122787476ms
Sending response {"id": 1909, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1910,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":6,"character":71},"end":{"line":6,"character":71}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.550031661987ms
Sending response {"id": 1910, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1911,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.836133956909ms
Sending response {"id": 1911, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1423},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani\n*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1912,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.699043273926ms
Sending response {"id": 1912, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1913,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.540018081665ms
Sending response {"id": 1913, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1914,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 2.10213661194ms
Sending response {"id": 1914, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1915,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":20,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.581979751587ms
Sending response {"id": 1915, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1916,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.349044799805ms
Sending response {"id": 1916, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1917,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.471830368042ms
Sending response {"id": 1917, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1918,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.31304359436ms
Sending response {"id": 1918, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1424},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani\nhttps://topaz.github.io/paste/#XQAAAQCEAgAAAAAAAAA2GUrqJWbwoQ9CFebuH/MnTUmk6LKG1iy1QPrmX8BOHQarhtbB6/4dOcxi07PeHfHbyZFoKijNljg404yiVVW+eAVwTudCIPxy96/BZWYEOK8EEvtvajho6fuNYxOnYJQVZkdHp+q9Hy2Xe9jzjC0+QSL8FuFOUu4RA54Sev0BhtLR23osbbfE+NFSEL6qVFZWVFa54rS9ydTeMhxrqPKlSkgZSYAOB5DA/Gc4BogO9C5Nea7GXiQuZcGM6igC/BvMtpJWozO7aYJFWBl+u6478ySYykmeD97swtPQcGs+evyOBABxJRB+JXgEorQ7lPqWauzfFfKBxQOdRQDVP/E1NGVk9mMVHJyG30IIBLxrQuA3He+yK3tcu0991Q0DBHlF3pGvsRV8WiFBmKUrDR5Fms5ughtdZtBZ4J8TcnRJvqo5cF+yC0cY9RO9zJVs/8sUDeA=*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1919,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.25486946106ms
Sending response {"id": 1919, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1920,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":7,"character":503},"end":{"line":7,"character":503}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.380039215088ms
Sending response {"id": 1920, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1921,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.323057174683ms
Sending response {"id": 1921, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1922,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":7,"character":359}}}
[server] Got a method textDocument/hover
[server] processing took 0.617980957031ms
Sending response {"id": 1922, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1425},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani\nhttps://topaz.github.io/paste/#XQAAAQCEAgAAAAAAAAA2GUrqJWbwoQ9CFebuH/MnTUmk6LKG1iy1QPrmX8BOHQarhtbB6/4dOcxi07PeHfHbyZFoKijNljg404yiVVW+eAVwTudCIPxy96/BZWYEOK8EEvtvajho6fuNYxOnYJQVZkdHp+q9Hy2Xe9jzjC0+QSL8FuFOUu4RA54Sev0BhtLR23osbbfE+NFSEL6qVFZWVFa54rS9ydTeMhxrqPKlSkgZSYAOB5DA/Gc4BogO9C5Nea7GXiQuZcGM6igC/BvMtpJWozO7aYJFWBl+u6478ySYykmeD97swtPQcGs+evyOBABxJRB+JXgEorQ7lPqWauzfFfKBxQOdRQDVP/E1NGVk9mMVHJyG30IIBLxrQuA3He+yK3tcu0991Q0DBHlF3pGvsRV8WiFBmKUrDR5Fms5ughtdZtBZ4J8TcnRJvqo5cF+yC0cY9RO9zJVs/8sUDeA=\n*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1923,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.387191772461ms
Sending response {"id": 1923, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1924,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.262975692749ms
Sending response {"id": 1924, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1925,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.577926635742ms
Sending response {"id": 1925, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1926,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":14,"character":60}}}
[server] Got a method textDocument/hover
[server] processing took 0.685930252075ms
Sending response {"id": 1926, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1927,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.73306465149ms
Sending response {"id": 1927, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1928,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.262022018433ms
Sending response {"id": 1928, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1426},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani\nhttps://topaz.github.io/paste/#XQAAAQCEAgAAAAAAAAA2GUrqJWbwoQ9CFebuH/MnTUmk6LKG1iy1QPrmX8BOHQarhtbB6/4dOcxi07PeHfHbyZFoKijNljg404yiVVW+eAVwTudCIPxy96/BZWYEOK8EEvtvajho6fuNYxOnYJQVZkdHp+q9Hy2Xe9jzjC0+QSL8FuFOUu4RA54Sev0BhtLR23osbbfE+NFSEL6qVFZWVFa54rS9ydTeMhxrqPKlSkgZSYAOB5DA/Gc4BogO9C5Nea7GXiQuZcGM6igC/BvMtpJWozO7aYJFWBl+u6478ySYykmeD97swtPQcGs+evyOBABxJRB+JXgEorQ7lPqWauzfFfKBxQOdRQDVP/E1NGVk9mMVHJyG30IIBLxrQuA3He+yK3tcu0991Q0DBHlF3pGvsRV8WiFBmKUrDR5Fms5ughtdZtBZ4J8TcnRJvqo5cF+yC0cY9RO9zJVs/8sUDeA=\nhttps://www.reddit.com/r/adventofcode/comments/kdf85p/2020_day_15_solutions/gfwu7ti/?utm_source=reddit&utm_medium=web2x&context=3*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","id":1929,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.624895095825ms
Sending response {"id": 1929, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1930,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":129},"end":{"line":8,"character":129}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.277996063232ms
Sending response {"id": 1930, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1931,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.352144241333ms
Sending response {"id": 1931, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1932,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.406980514526ms
Sending response {"id": 1932, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1933,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"position":{"line":8,"character":30}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.57315826416ms
Sending response {"id": 1933, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1934,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml"},"range":{"start":{"line":8,"character":30},"end":{"line":8,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.356197357178ms
Sending response {"id": 1934, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1426},"contentChanges":[{"text":"let seznam_dvojic stevilo = \n    let rec aux acc seznam  = \n        if acc > stevilo then seznam else aux (acc+1) ((acc, 0)::seznam)\n    in \n    List.rev (aux 1 [])\n\n(*TAKO NI ŠLO....pomagala sem si z rešitvami iz ostalih spletnih strani\nhttps://topaz.github.io/paste/#XQAAAQCEAgAAAAAAAAA2GUrqJWbwoQ9CFebuH/MnTUmk6LKG1iy1QPrmX8BOHQarhtbB6/4dOcxi07PeHfHbyZFoKijNljg404yiVVW+eAVwTudCIPxy96/BZWYEOK8EEvtvajho6fuNYxOnYJQVZkdHp+q9Hy2Xe9jzjC0+QSL8FuFOUu4RA54Sev0BhtLR23osbbfE+NFSEL6qVFZWVFa54rS9ydTeMhxrqPKlSkgZSYAOB5DA/Gc4BogO9C5Nea7GXiQuZcGM6igC/BvMtpJWozO7aYJFWBl+u6478ySYykmeD97swtPQcGs+evyOBABxJRB+JXgEorQ7lPqWauzfFfKBxQOdRQDVP/E1NGVk9mMVHJyG30IIBLxrQuA3He+yK3tcu0991Q0DBHlF3pGvsRV8WiFBmKUrDR5Fms5ughtdZtBZ4J8TcnRJvqo5cF+yC0cY9RO9zJVs/8sUDeA=\nhttps://www.reddit.com/r/adventofcode/comments/kdf85p/2020_day_15_solutions/gfwu7ti/?utm_source=reddit&utm_medium=web2x&context=3*)\n\nlet n_ti_element n sez =\n  let sez_brez_zadnjega = sez |> List.rev |> List.tl |> List.rev in \n  let zadnji = sez |> List.rev |> List.hd in \n  let prazen = Array.make n 0 in \n  List.iteri (fun i n -> prazen.(n) <- i + 1) sez_brez_zadnjega;   (*to morem ugotovit zakaj je tle *)\n  let rec krog poteza prejsni = if poteza = n + 1 then prejsni else \n    let naslednji = match prazen.(prejsni) with\n      |0 -> 0 \n      |i -> poteza - i -1 \n    in\n    prazen.(prejsni) <- poteza -1;\n    krog (poteza + 1) naslednji\n  in\n  krog ((List.length sez) +1) zadnji\n \n\nlet naloga1 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 2020 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n\n\nlet naloga2 vsebina = \n    let input = vsebina |> String.split_on_char ',' |> List.map (int_of_string) in\n    string_of_int (n_ti_element 30000000 input)  (*mi javi napako int_of_string ma če dam posebi v konzolo pa dela*)\n    \n\nlet test = \"0,3,6\"\n\nlet _ =\n    let preberi_datoteko ime_datoteke =\n        let chan = open_in ime_datoteke in\n        let vsebina = really_input_string chan (in_channel_length chan) in\n        close_in chan;\n        vsebina\n    and izpisi_datoteko ime_datoteke vsebina =\n        let chan = open_out ime_datoteke in\n        output_string chan vsebina;\n        close_out chan\n    in\n    let vsebina_datoteke = preberi_datoteko \"day_15/day_15.in\" in\n    let odgovor1 = naloga1 vsebina_datoteke in\n    let odgovor2 = naloga2 vsebina_datoteke\n    in\n    izpisi_datoteko \"day_15/day_15_1.out\" odgovor1;\n    izpisi_datoteko \"day_15/day_15_2.out\" odgovor2"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/Advent_Of_Code_2020/day_15/day_15.ml","version":1426}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
